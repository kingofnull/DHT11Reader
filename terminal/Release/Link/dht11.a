;#define DDRV DDR SPIN
;#define OUT_PIN PORT SPIN
;#define IN_PIN PIN SPIN
;#define setDHT11Pin(x) # define IN_PIN x
;
;
;// count bit
;unsigned char bit_count = 0;
;// feedback count bit return
;unsigned char c = 0;
;// temperature and humidity value
;
;// loop count
;unsigned char cl = 0;
;
;//***** start methods *****//
;
;void request(void)
; 0002 0013 {

	.CSEG
;PCODE: $00000000 VOL: 0
;PCODE: $00000001 VOL: 0
; 0002 0014     DDRV = 1;
;PCODE: $00000002 VOL: 0
; 0002 0015     // DDRD |= (1<<0);
; 0002 0016 
; 0002 0017     OUT_PIN = 0;
;PCODE: $00000003 VOL: 0
; 0002 0018     // PORTD &= ~(1<<0);
; 0002 0019 
; 0002 001A     // delay_ms(18);
; 0002 001B     delay_ms(18);
;PCODE: $00000004 VOL: 0
; 0002 001C 
; 0002 001D     OUT_PIN = 1;
;PCODE: $00000005 VOL: 0
;PCODE: $00000006 VOL: 0
; 0002 001E     // PORTD |= (1<<0);
; 0002 001F }
;PCODE: $00000007 VOL: 0
;PCODE: $00000008 VOL: 0
;
;
;
;void response()
; 0002 0024 {
;PCODE: $00000009 VOL: 0
;PCODE: $0000000A VOL: 0
; 0002 0025     // PIND
; 0002 0026     //DDRD &= ~(1<<0);
; 0002 0027     DDRV = 0;
;PCODE: $0000000B VOL: 0
; 0002 0028 
; 0002 0029     while(IN_PIN)
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0002 002A     {
;PCODE: $00000011 VOL: 0
; 0002 002B         delay_us(1);
;PCODE: $00000012 VOL: 0
; 0002 002C         cl++;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0002 002D         if (cl > 80) break;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0002 002E     }
;PCODE: $00000018 VOL: 0
; 0002 002F 
; 0002 0030     cl = 0;
;PCODE: $00000019 VOL: 0
; 0002 0031     while(IN_PIN==0)
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0002 0032     {
;PCODE: $00000021 VOL: 0
; 0002 0033         delay_us(40);
;PCODE: $00000022 VOL: 0
; 0002 0034         cl++;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0002 0035         if (cl > 2) break;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0002 0036     }
;PCODE: $00000028 VOL: 0
; 0002 0037 
; 0002 0038     cl = 0;
;PCODE: $00000029 VOL: 0
; 0002 0039     while(IN_PIN)
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0002 003A     {
;PCODE: $0000002F VOL: 0
; 0002 003B         delay_us(40);
;PCODE: $00000030 VOL: 0
; 0002 003C         cl++;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0002 003D         if (cl > 2) break;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0002 003E     }
;PCODE: $00000036 VOL: 0
; 0002 003F }
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;
;
;int i;
;unsigned char recive()
; 0002 0044 {
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0002 0045     while(bit_count<8)
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0002 0046     {
; 0002 0047         bit_count++;
;PCODE: $0000003F VOL: 0
; 0002 0048 
; 0002 0049         while(IN_PIN==0);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0002 004A 
; 0002 004B         delay_us(30);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0002 004C 
; 0002 004D         if(IN_PIN)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0002 004E         {
;PCODE: $0000004D VOL: 0
; 0002 004F             c=(c<<1)|(0x01);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0002 0050         } else {
; 0002 0051             c=c<<1;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0002 0052         }
; 0002 0053 
; 0002 0054         for (i=0;((i<1000) && IN_PIN);i++){delay_us(10);};
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0002 0055 
; 0002 0056         // while(IN_PIN);
; 0002 0057     }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0002 0058 
; 0002 0059     bit_count=0;
;PCODE: $0000006F VOL: 0
; 0002 005A 
; 0002 005B     return c;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0002 005C }
;PCODE: $00000072 VOL: 0
;
;unsigned char readDHT11(char *temp,unsigned char *hum){
; 0002 005E unsigned char readDHT11(char *temp,unsigned char *hum){
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0002 005F     unsigned char  d_rh, d_temp, check;
; 0002 0060     request();
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;	*temp -> Y+6
;	*hum -> Y+4
;	d_rh -> R17
;	d_temp -> R16
;	check -> R19
;PCODE: $00000077 VOL: 0
; 0002 0061     response();
;PCODE: $00000078 VOL: 0
; 0002 0062     *hum   = recive();
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0002 0063     d_rh   = recive();
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0002 0064     *temp = (char)recive();
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0002 0065     d_temp = recive();
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0002 0066     check  = recive();
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0002 0067 
; 0002 0068 
; 0002 0069 
; 0002 006A    return ((*hum  + d_rh + *temp + d_temp) == check) ;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0002 006B }
;PCODE: $00000098 VOL: 0
