;/*
; * t.c
; *
; * Created: 5/2/2018 8:22:05 PM
; * Author: MSS
; */
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <delay.h>
;
;// set dht11 sensor port and pin
;#define SPIN C.0
;#include <DHT11/DHT11.h>
;
;#define DDRV DDR SPIN
;#define OUT_PIN PORT SPIN
;#define IN_PIN PIN SPIN
;#define setDHT11Pin(x) # define IN_PIN x
;
;
;
;// count bit
;unsigned char bit_count = 0;
;// feedback count bit return
;unsigned char c = 0;
;// temperature and humidity value
;
;// loop count
;unsigned char cl = 0;
;
;//***** start methods *****//
;
;void request(void)
; 0000 000E {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;    DDRV = 1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;    // DDRD |= (1<<0);
;
;    OUT_PIN = 0;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;    // PORTD &= ~(1<<0);
;
;    // delay_ms(18);
;    delay_ms(18);
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;
;    OUT_PIN = 1;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;    // PORTD |= (1<<0);
;}
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;
;
;void response()
;{
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;    // PIND
;    //DDRD &= ~(1<<0);
;    DDRV = 0;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;
;    while(IN_PIN)
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;    {
;        delay_us(1);
;PCODE: $00000022 VOL: 0
;        cl++;
;PCODE: $00000023 VOL: 0
;        if (cl > 80) break;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;    }
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;
;    cl = 0;
;PCODE: $0000002B VOL: 0
;    while(IN_PIN==0)
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;    {
;        delay_us(40);
;PCODE: $00000030 VOL: 0
;        cl++;
;PCODE: $00000031 VOL: 0
;        if (cl > 2) break;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;    }
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;
;    cl = 0;
;PCODE: $00000039 VOL: 0
;    while(IN_PIN)
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;    {
;        delay_us(40);
;PCODE: $0000003E VOL: 0
;        cl++;
;PCODE: $0000003F VOL: 0
;        if (cl > 2) break;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;    }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;}
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;
;
;int i;
;unsigned char recive()
;{
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;    while(bit_count<8)
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;    {
;        bit_count++;
;PCODE: $0000004F VOL: 0
;
;        while(IN_PIN==0);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;
;        delay_us(30);
;PCODE: $00000056 VOL: 0
;
;        if(IN_PIN)
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;        {
;            c=(c<<1)|(0x01);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;        } else {
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;            c=c<<1;
;PCODE: $00000060 VOL: 0
;        }
;PCODE: $00000061 VOL: 0
;
;        for (i=0;((i<1000) && IN_PIN);i++){delay_us(10);};
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;
;        // while(IN_PIN);
;    }
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;
;    bit_count=0;
;PCODE: $0000007B VOL: 0
;
;    return c;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;}
;PCODE: $0000007E VOL: 0
;
;unsigned char readDHT11(char *temp,unsigned char *hum){
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;    unsigned char  d_rh, d_temp, check;
;    request();
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;	*temp -> Y+6
;	*hum -> Y+4
;	d_rh -> R17
;	d_temp -> R16
;	check -> R19
;PCODE: $00000083 VOL: 0
;    response();
;PCODE: $00000084 VOL: 0
;    *hum   = recive();
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;    d_rh   = recive();
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;    *temp = (char)recive();
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;    d_temp = recive();
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;    check  = recive();
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;
;
;
;   return ((*hum  + d_rh + *temp + d_temp) == check) ;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;}
;PCODE: $000000A4 VOL: 0
;
;
;
;
;void main(void)
; 0000 0014 {
;PCODE: $000000A5 VOL: 0
; 0000 0015 //DHT_setup();
; 0000 0016 UCSRB=0x08;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0017 UCSRC=0x86;
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0018 UBRRL=0xCF;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0019 while (1)
;PCODE: $000000AC VOL: 0
; 0000 001A     {
; 0000 001B     // Please write your application code here
; 0000 001C        //#asm("cli")
; 0000 001D        // DHT_read(&temp,&hum);
; 0000 001E        // #asm("sei")
; 0000 001F 
; 0000 0020 
; 0000 0021 
; 0000 0022         unsigned char hum=0;
; 0000 0023         char temp=0;
; 0000 0024 		unsigned char crc=readDHT11(&temp,&hum);
; 0000 0025 
; 0000 0026 
; 0000 0027         printf("T=%dC  H=%dR CRC=%i\r\n",temp,hum,crc);
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;	hum -> Y+2
;	temp -> Y+1
;	crc -> Y+0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0028 
; 0000 0029         delay_ms(2000);
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 002A     }
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 002B }
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
