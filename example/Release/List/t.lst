
AVRASM ver. 2.1.30  C:\Users\MSS\Desktop\terminal\Release\List\t.asm Mon May 14 19:05:17 2018

C:\Users\MSS\Desktop\terminal\Release\List\t.asm(1086): warning: Register r5 already defined by the .DEF directive
C:\Users\MSS\Desktop\terminal\Release\List\t.asm(1087): warning: Register r4 already defined by the .DEF directive
C:\Users\MSS\Desktop\terminal\Release\List\t.asm(1088): warning: Register r7 already defined by the .DEF directive
C:\Users\MSS\Desktop\terminal\Release\List\t.asm(1089): warning: Register r8 already defined by the .DEF directive
C:\Users\MSS\Desktop\terminal\Release\List\t.asm(1090): warning: Register r9 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _bit_count=R5
                 	.DEF _c=R4
                 	.DEF _cl=R7
                 	.DEF _i=R8
                 	.DEF _i_msb=R9
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c02f      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000013 0000
000014 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x0:
000015 3d54
000016 6425
000017 2043
000018 4820      	.DB  0x54,0x3D,0x25,0x64,0x43,0x20,0x20,0x48
000019 253d
00001a 5264
00001b 4320
00001c 4352      	.DB  0x3D,0x25,0x64,0x52,0x20,0x43,0x52,0x43
00001d 253d
00001e 0d69
00001f 000a      	.DB  0x3D,0x25,0x69,0xD,0xA,0x0
                 _0x2000000:
000020 4e2d
000021 4e41
C:\Users\MSS\Desktop\terminal\Release\List\t.asm(1128): warning: .cseg .db misalignment - padding zero byte
000022 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2080060:
C:\Users\MSS\Desktop\terminal\Release\List\t.asm(1130): warning: .cseg .db misalignment - padding zero byte
000023 0001      	.DB  0x1
                 _0x2080000:
000024 4e2d
000025 4e41
000026 4900
000027 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\MSS\Desktop\terminal\Release\List\t.asm(1133): warning: .cseg .db misalignment - padding zero byte
000028 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000029 0004      	.DW  0x04
00002a 0004      	.DW  0x04
00002b 0026      	.DW  __REG_VARS*2
                 
00002c 0001      	.DW  0x01
00002d 0160      	.DW  __seed_G104
00002e 0046      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
00002f 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000030 94f8      	CLI
000031 27ee      	CLR  R30
000032 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000033 e0f1      	LDI  R31,1
000034 bffb      	OUT  GICR,R31
000035 bfeb      	OUT  GICR,R30
000036 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000037 e08d      	LDI  R24,(14-2)+1
000038 e0a2      	LDI  R26,2
000039 27bb      	CLR  R27
                 __CLEAR_REG:
00003a 93ed      	ST   X+,R30
00003b 958a      	DEC  R24
00003c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00003d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00003e e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00003f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000040 93ed      	ST   X+,R30
000041 9701      	SBIW R24,1
000042 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000043 e5e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000044 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000045 9185      	LPM  R24,Z+
000046 9195      	LPM  R25,Z+
000047 9700      	SBIW R24,0
000048 f061      	BREQ __GLOBAL_INI_END
000049 91a5      	LPM  R26,Z+
00004a 91b5      	LPM  R27,Z+
00004b 9005      	LPM  R0,Z+
00004c 9015      	LPM  R1,Z+
00004d 01bf      	MOVW R22,R30
00004e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00004f 9005      	LPM  R0,Z+
000050 920d      	ST   X+,R0
000051 9701      	SBIW R24,1
000052 f7e1      	BRNE __GLOBAL_INI_LOOP
000053 01fb      	MOVW R30,R22
000054 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000055 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000056 bfed      	OUT  SPL,R30
000057 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000058 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000059 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00005a e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00005b c06b      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*
                 ; * t.c
                 ; *
                 ; * Created: 5/2/2018 8:22:05 PM
                 ; * Author: MSS
                 ; */
                 ;
                 ;#include <io.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;// set dht11 sensor port and pin
                 ;#define SPIN C.0
                 ;#include <DHT11/DHT11.h>
                 ;
                 ;#define DDRV DDR SPIN
                 ;#define OUT_PIN PORT SPIN
                 ;#define IN_PIN PIN SPIN
                 ;#define setDHT11Pin(x) # define IN_PIN x
                 ;
                 ;
                 ;
                 ;// count bit
                 ;unsigned char bit_count = 0;
                 ;// feedback count bit return
                 ;unsigned char c = 0;
                 ;// temperature and humidity value
                 ;
                 ;// loop count
                 ;unsigned char cl = 0;
                 ;
                 ;//***** start methods *****//
                 ;
                 ;void request(void)
                 ; 0000 000E {
                 
                 	.CSEG
                 _request:
                 ; .FSTART _request
                 ;    DDRV = 1;
00005c 9aa0      	SBI  0x14,0
                 ;    // DDRD |= (1<<0);
                 ;
                 ;    OUT_PIN = 0;
00005d 98a8      	CBI  0x15,0
                 ;    // PORTD &= ~(1<<0);
                 ;
                 ;    // delay_ms(18);
                 ;    delay_ms(18);
00005e e1a2      	LDI  R26,LOW(18)
00005f e0b0      	LDI  R27,0
000060 d51a      	RCALL _delay_ms
                 ;
                 ;    OUT_PIN = 1;
000061 9aa8      	SBI  0x15,0
                 ;    // PORTD |= (1<<0);
                 ;}
000062 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;
                 ;void response()
                 ;{
                 _response:
                 ; .FSTART _response
                 ;    // PIND
                 ;    //DDRD &= ~(1<<0);
                 ;    DDRV = 0;
000063 98a0      	CBI  0x14,0
                 ;
                 ;    while(IN_PIN)
                 _0xB:
000064 9b98      	SBIS 0x13,0
000065 c007      	RJMP _0xD
                 ;    {
                 ;        delay_us(1);
                +
000066 e083     +LDI R24 , LOW ( 3 )
                +__DELAY_USB_LOOP :
000067 958a     +DEC R24
000068 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 3
                 ;        cl++;
000069 9473      	INC  R7
                 ;        if (cl > 80) break;
00006a e5e0      	LDI  R30,LOW(80)
00006b 15e7      	CP   R30,R7
00006c f7b8      	BRSH _0xB
                 ;    }
                 _0xD:
                 ;
                 ;    cl = 0;
00006d 2477      	CLR  R7
                 ;    while(IN_PIN==0)
                 _0xF:
00006e 9998      	SBIC 0x13,0
00006f c002      	RJMP _0x11
                 ;    {
                 ;        delay_us(40);
000070 d3f2      	RCALL SUBOPT_0x0
                 ;        cl++;
                 ;        if (cl > 2) break;
000071 f7e0      	BRSH _0xF
                 ;    }
                 _0x11:
                 ;
                 ;    cl = 0;
000072 2477      	CLR  R7
                 ;    while(IN_PIN)
                 _0x13:
000073 9b98      	SBIS 0x13,0
000074 c002      	RJMP _0x15
                 ;    {
                 ;        delay_us(40);
000075 d3ed      	RCALL SUBOPT_0x0
                 ;        cl++;
                 ;        if (cl > 2) break;
000076 f7e0      	BRSH _0x13
                 ;    }
                 _0x15:
                 ;}
000077 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;int i;
                 ;unsigned char recive()
                 ;{
                 _recive:
                 ; .FSTART _recive
                 ;    while(bit_count<8)
                 _0x17:
000078 e0e8      	LDI  R30,LOW(8)
000079 165e      	CP   R5,R30
00007a f500      	BRSH _0x19
                 ;    {
                 ;        bit_count++;
00007b 9453      	INC  R5
                 ;
                 ;        while(IN_PIN==0);
                 _0x1A:
00007c 9b98      	SBIS 0x13,0
00007d cffe      	RJMP _0x1A
                 ;
                 ;        delay_us(30);
                +
00007e e580     +LDI R24 , LOW ( 80 )
                +__DELAY_USB_LOOP :
00007f 958a     +DEC R24
000080 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 80
                 ;
                 ;        if(IN_PIN)
000081 9b98      	SBIS 0x13,0
000082 c005      	RJMP _0x1D
                 ;        {
                 ;            c=(c<<1)|(0x01);
000083 2de4      	MOV  R30,R4
000084 0fee      	LSL  R30
000085 60e1      	ORI  R30,1
000086 2e4e      	MOV  R4,R30
                 ;        } else {
000087 c001      	RJMP _0x1E
                 _0x1D:
                 ;            c=c<<1;
000088 0c44      	LSL  R4
                 ;        }
                 _0x1E:
                 ;
                 ;        for (i=0;((i<1000) && IN_PIN);i++){delay_us(10);};
000089 2488      	CLR  R8
00008a 2499      	CLR  R9
                 _0x20:
00008b eee8      	LDI  R30,LOW(1000)
00008c e0f3      	LDI  R31,HIGH(1000)
00008d 168e      	CP   R8,R30
00008e 069f      	CPC  R9,R31
00008f f414      	BRGE _0x22
000090 9998      	SBIC 0x13,0
000091 c001      	RJMP _0x23
                 _0x22:
000092 c007      	RJMP _0x21
                 _0x23:
                +
000093 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000094 958a     +DEC R24
000095 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000096 01f4      	MOVW R30,R8
000097 9631      	ADIW R30,1
000098 014f      	MOVW R8,R30
000099 cff1      	RJMP _0x20
                 _0x21:
                 ;
                 ;        // while(IN_PIN);
                 ;    }
00009a cfdd      	RJMP _0x17
                 _0x19:
                 ;
                 ;    bit_count=0;
00009b 2455      	CLR  R5
                 ;
                 ;    return c;
00009c 2de4      	MOV  R30,R4
00009d 9508      	RET
                 ;}
                 ; .FEND
                 ;
                 ;unsigned char readDHT11(char *temp,unsigned char *hum){
                 _readDHT11:
                 ; .FSTART _readDHT11
                 ;    unsigned char  d_rh, d_temp, check;
                 ;    request();
00009e d3cb      	RCALL SUBOPT_0x1
00009f d735      	RCALL __SAVELOCR4
                 ;	*temp -> Y+6
                 ;	*hum -> Y+4
                 ;	d_rh -> R17
                 ;	d_temp -> R16
                 ;	check -> R19
0000a0 dfbb      	RCALL _request
                 ;    response();
0000a1 dfc1      	RCALL _response
                 ;    *hum   = recive();
0000a2 dfd5      	RCALL _recive
0000a3 81ac      	LDD  R26,Y+4
0000a4 81bd      	LDD  R27,Y+4+1
0000a5 93ec      	ST   X,R30
                 ;    d_rh   = recive();
0000a6 dfd1      	RCALL _recive
0000a7 2f1e      	MOV  R17,R30
                 ;    *temp = (char)recive();
0000a8 dfcf      	RCALL _recive
0000a9 d3c3      	RCALL SUBOPT_0x2
0000aa 93ec      	ST   X,R30
                 ;    d_temp = recive();
0000ab dfcc      	RCALL _recive
0000ac 2f0e      	MOV  R16,R30
                 ;    check  = recive();
0000ad dfca      	RCALL _recive
0000ae 2f3e      	MOV  R19,R30
                 ;
                 ;
                 ;
                 ;   return ((*hum  + d_rh + *temp + d_temp) == check) ;
0000af 81ac      	LDD  R26,Y+4
0000b0 81bd      	LDD  R27,Y+4+1
0000b1 91ac      	LD   R26,X
0000b2 27bb      	CLR  R27
0000b3 2fe1      	MOV  R30,R17
0000b4 e0f0      	LDI  R31,0
0000b5 0fea      	ADD  R30,R26
0000b6 1ffb      	ADC  R31,R27
0000b7 010f      	MOVW R0,R30
0000b8 d3b4      	RCALL SUBOPT_0x2
0000b9 91ec      	LD   R30,X
0000ba e0f0      	LDI  R31,0
0000bb 01d0      	MOVW R26,R0
0000bc 0fae      	ADD  R26,R30
0000bd 1fbf      	ADC  R27,R31
0000be 27ee      	CLR  R30
0000bf 0fa0      	ADD  R26,R16
0000c0 1fbe      	ADC  R27,R30
0000c1 2fe3      	MOV  R30,R19
0000c2 e0f0      	LDI  R31,0
0000c3 d681      	RCALL __EQW12
0000c4 d717      	RCALL __LOADLOCR4
0000c5 9628      	ADIW R28,8
0000c6 9508      	RET
                 ;}
                 ; .FEND
                 ;
                 ;
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0014 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0015 //DHT_setup();
                 ; 0000 0016 UCSRB=0x08;
0000c7 e0e8      	LDI  R30,LOW(8)
0000c8 b9ea      	OUT  0xA,R30
                 ; 0000 0017 UCSRC=0x86;
0000c9 e8e6      	LDI  R30,LOW(134)
0000ca bde0      	OUT  0x20,R30
                 ; 0000 0018 UBRRL=0xCF;
0000cb ecef      	LDI  R30,LOW(207)
0000cc b9e9      	OUT  0x9,R30
                 ; 0000 0019 while (1)
                 _0x24:
                 ; 0000 001A     {
                 ; 0000 001B     // Please write your application code here
                 ; 0000 001C        //#asm("cli")
                 ; 0000 001D        // DHT_read(&temp,&hum);
                 ; 0000 001E        // #asm("sei")
                 ; 0000 001F 
                 ; 0000 0020 
                 ; 0000 0021 
                 ; 0000 0022         unsigned char hum=0;
                 ; 0000 0023         char temp=0;
                 ; 0000 0024 		unsigned char crc=readDHT11(&temp,&hum);
                 ; 0000 0025 
                 ; 0000 0026 
                 ; 0000 0027         printf("T=%dC  H=%dR CRC=%i\r\n",temp,hum,crc);
0000cd 9723      	SBIW R28,3
0000ce e0e0      	LDI  R30,LOW(0)
0000cf 83e9      	STD  Y+1,R30
0000d0 83ea      	STD  Y+2,R30
                 ;	hum -> Y+2
                 ;	temp -> Y+1
                 ;	crc -> Y+0
0000d1 01fe      	MOVW R30,R28
0000d2 9631      	ADIW R30,1
0000d3 d39c      	RCALL SUBOPT_0x3
0000d4 01de      	MOVW R26,R28
0000d5 9614      	ADIW R26,4
0000d6 dfc7      	RCALL _readDHT11
0000d7 83e8      	ST   Y,R30
                +
0000d8 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000d9 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000da d395      	RCALL SUBOPT_0x3
0000db 81eb      	LDD  R30,Y+3
0000dc d396      	RCALL SUBOPT_0x4
0000dd 85e8      	LDD  R30,Y+8
0000de d394      	RCALL SUBOPT_0x4
0000df 85ea      	LDD  R30,Y+10
0000e0 d392      	RCALL SUBOPT_0x4
0000e1 e08c      	LDI  R24,12
0000e2 d277      	RCALL _printf
0000e3 962e      	ADIW R28,14
                 ; 0000 0028 
                 ; 0000 0029         delay_ms(2000);
0000e4 eda0      	LDI  R26,LOW(2000)
0000e5 e0b7      	LDI  R27,HIGH(2000)
0000e6 d494      	RCALL _delay_ms
                 ; 0000 002A     }
0000e7 9623      	ADIW R28,3
0000e8 cfe4      	RJMP _0x24
                 ; 0000 002B }
                 _0x27:
0000e9 cfff      	RJMP _0x27
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0000ea 93aa      	ST   -Y,R26
                 putchar0:
0000eb 9b5d           sbis usr,udre
0000ec cffe           rjmp putchar0
0000ed 81e8           ld   r30,y
0000ee b9ec           out  udr,r30
0000ef 9621      	ADIW R28,1
0000f0 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
0000f1 d378      	RCALL SUBOPT_0x1
0000f2 81aa      	LDD  R26,Y+2
0000f3 dff6      	RCALL _putchar
0000f4 81a8      	LD   R26,Y
0000f5 81b9      	LDD  R27,Y+1
0000f6 d381      	RCALL SUBOPT_0x5
0000f7 9623      	ADIW R28,3
0000f8 9508      	RET
                 ; .FEND
                 __ftoe_G100:
                 ; .FSTART __ftoe_G100
0000f9 d384      	RCALL SUBOPT_0x6
0000fa e8e0      	LDI  R30,LOW(128)
0000fb 83ea      	STD  Y+2,R30
0000fc e3ef      	LDI  R30,LOW(63)
0000fd 83eb      	STD  Y+3,R30
0000fe d6d6      	RCALL __SAVELOCR4
0000ff 85ee      	LDD  R30,Y+14
000100 85ff      	LDD  R31,Y+14+1
000101 3fef      	CPI  R30,LOW(0xFFFF)
000102 efaf      	LDI  R26,HIGH(0xFFFF)
000103 07fa      	CPC  R31,R26
000104 f439      	BRNE _0x2000019
000105 85e8      	LDD  R30,Y+8
000106 85f9      	LDD  R31,Y+8+1
000107 d368      	RCALL SUBOPT_0x3
                +
000108 e4a0     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
000109 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW2FN _0x2000000,0
00010a d26d      	RCALL _strcpyf
00010b c07b      	RJMP _0x20A0004
                 _0x2000019:
00010c 3fef      	CPI  R30,LOW(0x7FFF)
00010d e7af      	LDI  R26,HIGH(0x7FFF)
00010e 07fa      	CPC  R31,R26
00010f f431      	BRNE _0x2000018
000110 d373      	RCALL SUBOPT_0x7
000111 d35e      	RCALL SUBOPT_0x3
                +
000112 e4a1     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
000113 e0b0     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW2FN _0x2000000,1
000114 d263      	RCALL _strcpyf
000115 c071      	RJMP _0x20A0004
                 _0x2000018:
000116 85ab      	LDD  R26,Y+11
000117 30a7      	CPI  R26,LOW(0x7)
000118 f010      	BRLO _0x200001B
000119 e0e6      	LDI  R30,LOW(6)
00011a 87eb      	STD  Y+11,R30
                 _0x200001B:
00011b 851b      	LDD  R17,Y+11
                 _0x200001C:
00011c d36a      	RCALL SUBOPT_0x8
00011d f011      	BREQ _0x200001E
00011e d36c      	RCALL SUBOPT_0x9
00011f cffc      	RJMP _0x200001C
                 _0x200001E:
000120 d378      	RCALL SUBOPT_0xA
000121 d6ad      	RCALL __CPD10
000122 f419      	BRNE _0x200001F
000123 e030      	LDI  R19,LOW(0)
000124 d366      	RCALL SUBOPT_0x9
000125 c01b      	RJMP _0x2000020
                 _0x200001F:
000126 853b      	LDD  R19,Y+11
000127 d376      	RCALL SUBOPT_0xB
000128 f009      	BREQ PC+2
000129 f408      	BRCC PC+2
00012a c007      	RJMP _0x2000021
00012b d35f      	RCALL SUBOPT_0x9
                 _0x2000022:
00012c d371      	RCALL SUBOPT_0xB
00012d f018      	BRLO _0x2000024
00012e d379      	RCALL SUBOPT_0xC
00012f d37d      	RCALL SUBOPT_0xD
000130 cffb      	RJMP _0x2000022
                 _0x2000024:
000131 c008      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
000132 d36b      	RCALL SUBOPT_0xB
000133 f428      	BRSH _0x2000028
000134 d373      	RCALL SUBOPT_0xC
000135 d382      	RCALL SUBOPT_0xE
000136 d387      	RCALL SUBOPT_0xF
000137 5031      	SUBI R19,LOW(1)
000138 cff9      	RJMP _0x2000026
                 _0x2000028:
000139 d351      	RCALL SUBOPT_0x9
                 _0x2000025:
00013a d35e      	RCALL SUBOPT_0xA
00013b d387      	RCALL SUBOPT_0x10
00013c d381      	RCALL SUBOPT_0xF
00013d d360      	RCALL SUBOPT_0xB
00013e f010      	BRLO _0x2000029
00013f d368      	RCALL SUBOPT_0xC
000140 d36c      	RCALL SUBOPT_0xD
                 _0x2000029:
                 _0x2000020:
000141 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000142 85eb      	LDD  R30,Y+11
000143 17e1      	CP   R30,R17
000144 f110      	BRLO _0x200002C
000145 d383      	RCALL SUBOPT_0x11
000146 d387      	RCALL SUBOPT_0x12
000147 d37b      	RCALL SUBOPT_0x10
000148 01df      	MOVW R26,R30
000149 01cb      	MOVW R24,R22
00014a d280      	RCALL _floor
                +
00014b 83ec     +STD Y + 4 , R30
00014c 83fd     +STD Y + 4 + 1 , R31
00014d 836e     +STD Y + 4 + 2 , R22
00014e 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00014f d358      	RCALL SUBOPT_0xC
000150 d578      	RCALL __DIVF21
000151 d466      	RCALL __CFD1U
000152 2f0e      	MOV  R16,R30
000153 d380      	RCALL SUBOPT_0x13
000154 d386      	RCALL SUBOPT_0x14
000155 27ff      	CLR  R31
000156 2766      	CLR  R22
000157 2777      	CLR  R23
000158 d498      	RCALL __CDF1
000159 d36f      	RCALL SUBOPT_0x11
00015a d520      	RCALL __MULF12
00015b d34c      	RCALL SUBOPT_0xC
00015c d665      	RCALL __SWAPD12
00015d d4c6      	RCALL __SUBF12
00015e d35f      	RCALL SUBOPT_0xF
00015f 2fe1      	MOV  R30,R17
000160 5f1f      	SUBI R17,-1
000161 30e0      	CPI  R30,0
000162 f6f9      	BRNE _0x200002A
000163 d370      	RCALL SUBOPT_0x13
000164 e2ee      	LDI  R30,LOW(46)
000165 93ec      	ST   X,R30
000166 cfdb      	RJMP _0x200002A
                 _0x200002C:
000167 d378      	RCALL SUBOPT_0x15
000168 9731      	SBIW R30,1
000169 85aa      	LDD  R26,Y+10
00016a 83a0      	STD  Z+0,R26
00016b 3030      	CPI  R19,0
00016c f42c      	BRGE _0x200002E
00016d 9531      	NEG  R19
00016e 85a8      	LDD  R26,Y+8
00016f 85b9      	LDD  R27,Y+8+1
000170 e2ed      	LDI  R30,LOW(45)
000171 c003      	RJMP _0x2000113
                 _0x200002E:
000172 85a8      	LDD  R26,Y+8
000173 85b9      	LDD  R27,Y+8+1
000174 e2eb      	LDI  R30,LOW(43)
                 _0x2000113:
000175 93ec      	ST   X,R30
000176 d369      	RCALL SUBOPT_0x15
000177 d368      	RCALL SUBOPT_0x15
000178 d36c      	RCALL SUBOPT_0x16
000179 d5df      	RCALL __DIVB21
00017a 5de0      	SUBI R30,-LOW(48)
00017b 01db      	MOVW R26,R22
00017c 93ec      	ST   X,R30
00017d d362      	RCALL SUBOPT_0x15
00017e d366      	RCALL SUBOPT_0x16
00017f d603      	RCALL __MODB21
000180 5de0      	SUBI R30,-LOW(48)
000181 01db      	MOVW R26,R22
000182 93ec      	ST   X,R30
000183 85a8      	LDD  R26,Y+8
000184 85b9      	LDD  R27,Y+8+1
000185 e0e0      	LDI  R30,LOW(0)
000186 93ec      	ST   X,R30
                 _0x20A0004:
000187 d654      	RCALL __LOADLOCR4
000188 9660      	ADIW R28,16
000189 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00018a d2df      	RCALL SUBOPT_0x1
00018b 97ef      	SBIW R28,63
00018c 9761      	SBIW R28,17
00018d d645      	RCALL __SAVELOCR6
00018e e010      	LDI  R17,0
                +
00018f 01fe     +MOVW R30 , R28
000190 5ae8     +SUBI R30 , LOW ( - 88 )
000191 4fff     +SBCI R31 , HIGH ( - 88 )
000192 9001     +LD R0 , Z +
000193 81f0     +LD R31 , Z
000194 2de0     +MOV R30 , R0
                 	__GETW1SX 88
000195 87e8      	STD  Y+8,R30
000196 87f9      	STD  Y+8+1,R31
                +
000197 01fe     +MOVW R30 , R28
000198 5aea     +SUBI R30 , LOW ( - 86 )
000199 4fff     +SBCI R31 , HIGH ( - 86 )
00019a 9001     +LD R0 , Z +
00019b 81f0     +LD R31 , Z
00019c 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00019d 83ee      	STD  Y+6,R30
00019e 83ff      	STD  Y+6+1,R31
00019f d2cd      	RCALL SUBOPT_0x2
0001a0 e0e0      	LDI  R30,LOW(0)
0001a1 e0f0      	LDI  R31,HIGH(0)
0001a2 93ed      	ST   X+,R30
0001a3 93fc      	ST   X,R31
                 _0x2000030:
0001a4 01de      	MOVW R26,R28
0001a5 5aa4      	SUBI R26,LOW(-(92))
0001a6 4fbf      	SBCI R27,HIGH(-(92))
0001a7 d2d0      	RCALL SUBOPT_0x5
0001a8 9731      	SBIW R30,1
0001a9 91e4      	LPM  R30,Z
0001aa 2f2e      	MOV  R18,R30
0001ab 30e0      	CPI  R30,0
0001ac f409      	BRNE PC+2
0001ad c1a6      	RJMP _0x2000032
0001ae 2fe1      	MOV  R30,R17
0001af 30e0      	CPI  R30,0
0001b0 f431      	BRNE _0x2000036
0001b1 3225      	CPI  R18,37
0001b2 f411      	BRNE _0x2000037
0001b3 e011      	LDI  R17,LOW(1)
0001b4 c001      	RJMP _0x2000038
                 _0x2000037:
0001b5 d334      	RCALL SUBOPT_0x17
                 _0x2000038:
0001b6 c19c      	RJMP _0x2000035
                 _0x2000036:
0001b7 30e1      	CPI  R30,LOW(0x1)
0001b8 f4b9      	BRNE _0x2000039
0001b9 3225      	CPI  R18,37
0001ba f411      	BRNE _0x200003A
0001bb d32e      	RCALL SUBOPT_0x17
0001bc c195      	RJMP _0x2000114
                 _0x200003A:
0001bd e012      	LDI  R17,LOW(2)
0001be e0e0      	LDI  R30,LOW(0)
0001bf 8bed      	STD  Y+21,R30
0001c0 e000      	LDI  R16,LOW(0)
0001c1 322d      	CPI  R18,45
0001c2 f411      	BRNE _0x200003B
0001c3 e001      	LDI  R16,LOW(1)
0001c4 c18e      	RJMP _0x2000035
                 _0x200003B:
0001c5 322b      	CPI  R18,43
0001c6 f419      	BRNE _0x200003C
0001c7 e2eb      	LDI  R30,LOW(43)
0001c8 8bed      	STD  Y+21,R30
0001c9 c189      	RJMP _0x2000035
                 _0x200003C:
0001ca 3220      	CPI  R18,32
0001cb f419      	BRNE _0x200003D
0001cc e2e0      	LDI  R30,LOW(32)
0001cd 8bed      	STD  Y+21,R30
0001ce c184      	RJMP _0x2000035
                 _0x200003D:
0001cf c002      	RJMP _0x200003E
                 _0x2000039:
0001d0 30e2      	CPI  R30,LOW(0x2)
0001d1 f439      	BRNE _0x200003F
                 _0x200003E:
0001d2 e050      	LDI  R21,LOW(0)
0001d3 e013      	LDI  R17,LOW(3)
0001d4 3320      	CPI  R18,48
0001d5 f411      	BRNE _0x2000040
0001d6 6800      	ORI  R16,LOW(128)
0001d7 c17b      	RJMP _0x2000035
                 _0x2000040:
0001d8 c002      	RJMP _0x2000041
                 _0x200003F:
0001d9 30e3      	CPI  R30,LOW(0x3)
0001da f491      	BRNE _0x2000042
                 _0x2000041:
0001db 3320      	CPI  R18,48
0001dc f010      	BRLO _0x2000044
0001dd 332a      	CPI  R18,58
0001de f008      	BRLO _0x2000045
                 _0x2000044:
0001df c007      	RJMP _0x2000043
                 _0x2000045:
0001e0 e0aa      	LDI  R26,LOW(10)
0001e1 9f5a      	MUL  R21,R26
0001e2 2d50      	MOV  R21,R0
0001e3 2fe2      	MOV  R30,R18
0001e4 53e0      	SUBI R30,LOW(48)
0001e5 0f5e      	ADD  R21,R30
0001e6 c16c      	RJMP _0x2000035
                 _0x2000043:
0001e7 e040      	LDI  R20,LOW(0)
0001e8 322e      	CPI  R18,46
0001e9 f411      	BRNE _0x2000046
0001ea e014      	LDI  R17,LOW(4)
0001eb c167      	RJMP _0x2000035
                 _0x2000046:
0001ec c00f      	RJMP _0x2000047
                 _0x2000042:
0001ed 30e4      	CPI  R30,LOW(0x4)
0001ee f499      	BRNE _0x2000049
0001ef 3320      	CPI  R18,48
0001f0 f010      	BRLO _0x200004B
0001f1 332a      	CPI  R18,58
0001f2 f008      	BRLO _0x200004C
                 _0x200004B:
0001f3 c008      	RJMP _0x200004A
                 _0x200004C:
0001f4 6200      	ORI  R16,LOW(32)
0001f5 e0aa      	LDI  R26,LOW(10)
0001f6 9f4a      	MUL  R20,R26
0001f7 2d40      	MOV  R20,R0
0001f8 2fe2      	MOV  R30,R18
0001f9 53e0      	SUBI R30,LOW(48)
0001fa 0f4e      	ADD  R20,R30
0001fb c157      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
0001fc 362c      	CPI  R18,108
0001fd f419      	BRNE _0x200004D
0001fe 6002      	ORI  R16,LOW(2)
0001ff e015      	LDI  R17,LOW(5)
000200 c152      	RJMP _0x2000035
                 _0x200004D:
000201 c003      	RJMP _0x200004E
                 _0x2000049:
000202 30e5      	CPI  R30,LOW(0x5)
000203 f009      	BREQ PC+2
000204 c14e      	RJMP _0x2000035
                 _0x200004E:
000205 2fe2      	MOV  R30,R18
000206 36e3      	CPI  R30,LOW(0x63)
000207 f439      	BRNE _0x2000053
000208 d2e8      	RCALL SUBOPT_0x18
000209 d2ee      	RCALL SUBOPT_0x19
00020a d2e6      	RCALL SUBOPT_0x18
00020b 81a4      	LDD  R26,Z+4
00020c 93aa      	ST   -Y,R26
00020d d2f1      	RCALL SUBOPT_0x1A
00020e c143      	RJMP _0x2000054
                 _0x2000053:
00020f 34e5      	CPI  R30,LOW(0x45)
000210 f011      	BREQ _0x2000057
000211 36e5      	CPI  R30,LOW(0x65)
000212 f409      	BRNE _0x2000058
                 _0x2000057:
000213 c002      	RJMP _0x2000059
                 _0x2000058:
000214 36e6      	CPI  R30,LOW(0x66)
000215 f5a9      	BRNE _0x200005A
                 _0x2000059:
000216 d2ee      	RCALL SUBOPT_0x1B
000217 d2f2      	RCALL SUBOPT_0x1C
000218 d58a      	RCALL __GETD1P
000219 d2f7      	RCALL SUBOPT_0x1D
00021a d2fb      	RCALL SUBOPT_0x1E
00021b 85ad      	LDD  R26,Y+13
00021c 23aa      	TST  R26
00021d f032      	BRMI _0x200005B
00021e 89ad      	LDD  R26,Y+21
00021f 32ab      	CPI  R26,LOW(0x2B)
000220 f041      	BREQ _0x200005D
000221 32a0      	CPI  R26,LOW(0x20)
000222 f061      	BREQ _0x200005F
000223 c012      	RJMP _0x2000060
                 _0x200005B:
000224 d2f3      	RCALL SUBOPT_0x1F
000225 d35f      	RCALL __ANEGF1
000226 d2ea      	RCALL SUBOPT_0x1D
000227 e2ed      	LDI  R30,LOW(45)
000228 8bed      	STD  Y+21,R30
                 _0x200005D:
000229 ff07      	SBRS R16,7
00022a c004      	RJMP _0x2000061
00022b 89ed      	LDD  R30,Y+21
00022c 93ea      	ST   -Y,R30
00022d d2d1      	RCALL SUBOPT_0x1A
00022e c007      	RJMP _0x2000062
                 _0x2000061:
                 _0x200005F:
00022f 85ee      	LDD  R30,Y+14
000230 85ff      	LDD  R31,Y+14+1
000231 9631      	ADIW R30,1
000232 d2ea      	RCALL SUBOPT_0x20
000233 9731      	SBIW R30,1
000234 89ad      	LDD  R26,Y+21
000235 83a0      	STD  Z+0,R26
                 _0x2000062:
                 _0x2000060:
000236 ff05      	SBRS R16,5
000237 e046      	LDI  R20,LOW(6)
000238 3626      	CPI  R18,102
000239 f439      	BRNE _0x2000064
00023a d2dd      	RCALL SUBOPT_0x1F
00023b d57c      	RCALL __PUTPARD1
00023c 934a      	ST   -Y,R20
00023d 89ab      	LDD  R26,Y+19
00023e 89bc      	LDD  R27,Y+19+1
00023f d19b      	RCALL _ftoa
000240 c007      	RJMP _0x2000065
                 _0x2000064:
000241 d2d6      	RCALL SUBOPT_0x1F
000242 d575      	RCALL __PUTPARD1
000243 934a      	ST   -Y,R20
000244 932a      	ST   -Y,R18
000245 89ac      	LDD  R26,Y+20
000246 89bd      	LDD  R27,Y+20+1
000247 deb1      	RCALL __ftoe_G100
                 _0x2000065:
000248 d2bc      	RCALL SUBOPT_0x1B
000249 d2d6      	RCALL SUBOPT_0x21
00024a c016      	RJMP _0x2000066
                 _0x200005A:
00024b 37e3      	CPI  R30,LOW(0x73)
00024c f421      	BRNE _0x2000068
00024d d2c8      	RCALL SUBOPT_0x1E
00024e d2d6      	RCALL SUBOPT_0x22
00024f d2d0      	RCALL SUBOPT_0x21
000250 c009      	RJMP _0x2000069
                 _0x2000068:
000251 37e0      	CPI  R30,LOW(0x70)
000252 f499      	BRNE _0x200006B
000253 d2c2      	RCALL SUBOPT_0x1E
000254 d2d0      	RCALL SUBOPT_0x22
000255 85ae      	LDD  R26,Y+14
000256 85bf      	LDD  R27,Y+14+1
000257 d137      	RCALL _strlenf
000258 2f1e      	MOV  R17,R30
000259 6008      	ORI  R16,LOW(8)
                 _0x2000069:
00025a 770f      	ANDI R16,LOW(127)
00025b 3040      	CPI  R20,0
00025c f011      	BREQ _0x200006D
00025d 1741      	CP   R20,R17
00025e f008      	BRLO _0x200006E
                 _0x200006D:
00025f c001      	RJMP _0x200006C
                 _0x200006E:
000260 2f14      	MOV  R17,R20
                 _0x200006C:
                 _0x2000066:
000261 e040      	LDI  R20,LOW(0)
000262 e0e0      	LDI  R30,LOW(0)
000263 8bec      	STD  Y+20,R30
000264 e030      	LDI  R19,LOW(0)
000265 c062      	RJMP _0x200006F
                 _0x200006B:
000266 36e4      	CPI  R30,LOW(0x64)
000267 f011      	BREQ _0x2000072
000268 36e9      	CPI  R30,LOW(0x69)
000269 f411      	BRNE _0x2000073
                 _0x2000072:
00026a 6004      	ORI  R16,LOW(4)
00026b c002      	RJMP _0x2000074
                 _0x2000073:
00026c 37e5      	CPI  R30,LOW(0x75)
00026d f491      	BRNE _0x2000075
                 _0x2000074:
00026e e0ea      	LDI  R30,LOW(10)
00026f 8bec      	STD  Y+20,R30
000270 ff01      	SBRS R16,1
000271 c007      	RJMP _0x2000076
                +
000272 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000273 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000274 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000275 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
000276 d2b2      	RCALL SUBOPT_0x23
000277 e01a      	LDI  R17,LOW(10)
000278 c01f      	RJMP _0x2000077
                 _0x2000076:
                +
000279 e1e0     +LDI R30 , LOW ( 0x2710 )
00027a e2f7     +LDI R31 , HIGH ( 0x2710 )
00027b e060     +LDI R22 , BYTE3 ( 0x2710 )
00027c e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00027d d2ab      	RCALL SUBOPT_0x23
00027e e015      	LDI  R17,LOW(5)
00027f c018      	RJMP _0x2000077
                 _0x2000075:
000280 35e8      	CPI  R30,LOW(0x58)
000281 f411      	BRNE _0x2000079
000282 6008      	ORI  R16,LOW(8)
000283 c003      	RJMP _0x200007A
                 _0x2000079:
000284 37e8      	CPI  R30,LOW(0x78)
000285 f009      	BREQ PC+2
000286 c0cb      	RJMP _0x20000B8
                 _0x200007A:
000287 e1e0      	LDI  R30,LOW(16)
000288 8bec      	STD  Y+20,R30
000289 ff01      	SBRS R16,1
00028a c007      	RJMP _0x200007C
                +
00028b e0e0     +LDI R30 , LOW ( 0x10000000 )
00028c e0f0     +LDI R31 , HIGH ( 0x10000000 )
00028d e060     +LDI R22 , BYTE3 ( 0x10000000 )
00028e e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00028f d299      	RCALL SUBOPT_0x23
000290 e018      	LDI  R17,LOW(8)
000291 c006      	RJMP _0x2000077
                 _0x200007C:
                +
000292 e0e0     +LDI R30 , LOW ( 0x1000 )
000293 e1f0     +LDI R31 , HIGH ( 0x1000 )
000294 e060     +LDI R22 , BYTE3 ( 0x1000 )
000295 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000296 d292      	RCALL SUBOPT_0x23
000297 e014      	LDI  R17,LOW(4)
                 _0x2000077:
000298 3040      	CPI  R20,0
000299 f011      	BREQ _0x200007D
00029a 770f      	ANDI R16,LOW(127)
00029b c001      	RJMP _0x200007E
                 _0x200007D:
00029c e041      	LDI  R20,LOW(1)
                 _0x200007E:
00029d ff01      	SBRS R16,1
00029e c005      	RJMP _0x200007F
00029f d276      	RCALL SUBOPT_0x1E
0002a0 d269      	RCALL SUBOPT_0x1C
0002a1 9614      	ADIW R26,4
0002a2 d500      	RCALL __GETD1P
0002a3 c00e      	RJMP _0x2000115
                 _0x200007F:
0002a4 ff02      	SBRS R16,2
0002a5 c006      	RJMP _0x2000081
0002a6 d26f      	RCALL SUBOPT_0x1E
0002a7 d262      	RCALL SUBOPT_0x1C
0002a8 9614      	ADIW R26,4
0002a9 d4f5      	RCALL __GETW1P
0002aa d495      	RCALL __CWD1
0002ab c006      	RJMP _0x2000115
                 _0x2000081:
0002ac d269      	RCALL SUBOPT_0x1E
0002ad d25c      	RCALL SUBOPT_0x1C
0002ae 9614      	ADIW R26,4
0002af d4ef      	RCALL __GETW1P
0002b0 2766      	CLR  R22
0002b1 2777      	CLR  R23
                 _0x2000115:
                +
0002b2 87ea     +STD Y + 10 , R30
0002b3 87fb     +STD Y + 10 + 1 , R31
0002b4 876c     +STD Y + 10 + 2 , R22
0002b5 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0002b6 ff02      	SBRS R16,2
0002b7 c00f      	RJMP _0x2000083
0002b8 85ad      	LDD  R26,Y+13
0002b9 23aa      	TST  R26
0002ba f42a      	BRPL _0x2000084
0002bb d25c      	RCALL SUBOPT_0x1F
0002bc d475      	RCALL __ANEGD1
0002bd d253      	RCALL SUBOPT_0x1D
0002be e2ed      	LDI  R30,LOW(45)
0002bf 8bed      	STD  Y+21,R30
                 _0x2000084:
0002c0 89ed      	LDD  R30,Y+21
0002c1 30e0      	CPI  R30,0
0002c2 f019      	BREQ _0x2000085
0002c3 5f1f      	SUBI R17,-LOW(1)
0002c4 5f4f      	SUBI R20,-LOW(1)
0002c5 c001      	RJMP _0x2000086
                 _0x2000085:
0002c6 7f0b      	ANDI R16,LOW(251)
                 _0x2000086:
                 _0x2000083:
0002c7 2f34      	MOV  R19,R20
                 _0x200006F:
0002c8 fd00      	SBRC R16,0
0002c9 c013      	RJMP _0x2000087
                 _0x2000088:
0002ca 1715      	CP   R17,R21
0002cb f410      	BRSH _0x200008B
0002cc 1735      	CP   R19,R21
0002cd f008      	BRLO _0x200008C
                 _0x200008B:
0002ce c00e      	RJMP _0x200008A
                 _0x200008C:
0002cf ff07      	SBRS R16,7
0002d0 c008      	RJMP _0x200008D
0002d1 ff02      	SBRS R16,2
0002d2 c004      	RJMP _0x200008E
0002d3 7f0b      	ANDI R16,LOW(251)
0002d4 892d      	LDD  R18,Y+21
0002d5 5011      	SUBI R17,LOW(1)
0002d6 c001      	RJMP _0x200008F
                 _0x200008E:
0002d7 e320      	LDI  R18,LOW(48)
                 _0x200008F:
0002d8 c001      	RJMP _0x2000090
                 _0x200008D:
0002d9 e220      	LDI  R18,LOW(32)
                 _0x2000090:
0002da d20f      	RCALL SUBOPT_0x17
0002db 5051      	SUBI R21,LOW(1)
0002dc cfed      	RJMP _0x2000088
                 _0x200008A:
                 _0x2000087:
                 _0x2000091:
0002dd 1714      	CP   R17,R20
0002de f480      	BRSH _0x2000093
0002df 6100      	ORI  R16,LOW(16)
0002e0 ff02      	SBRS R16,2
0002e1 c005      	RJMP _0x2000094
0002e2 d24b      	RCALL SUBOPT_0x24
0002e3 f009      	BREQ _0x2000095
0002e4 5051      	SUBI R21,LOW(1)
                 _0x2000095:
0002e5 5011      	SUBI R17,LOW(1)
0002e6 5041      	SUBI R20,LOW(1)
                 _0x2000094:
0002e7 e3e0      	LDI  R30,LOW(48)
0002e8 93ea      	ST   -Y,R30
0002e9 d215      	RCALL SUBOPT_0x1A
0002ea 3050      	CPI  R21,0
0002eb f009      	BREQ _0x2000096
0002ec 5051      	SUBI R21,LOW(1)
                 _0x2000096:
0002ed 5041      	SUBI R20,LOW(1)
0002ee cfee      	RJMP _0x2000091
                 _0x2000093:
0002ef 2f31      	MOV  R19,R17
0002f0 89ec      	LDD  R30,Y+20
0002f1 30e0      	CPI  R30,0
0002f2 f4a9      	BRNE _0x2000097
                 _0x2000098:
0002f3 3030      	CPI  R19,0
0002f4 f091      	BREQ _0x200009A
0002f5 ff03      	SBRS R16,3
0002f6 c005      	RJMP _0x200009B
0002f7 85ee      	LDD  R30,Y+14
0002f8 85ff      	LDD  R31,Y+14+1
0002f9 9125      	LPM  R18,Z+
0002fa d222      	RCALL SUBOPT_0x20
0002fb c005      	RJMP _0x200009C
                 _0x200009B:
0002fc 85ae      	LDD  R26,Y+14
0002fd 85bf      	LDD  R27,Y+14+1
0002fe 912d      	LD   R18,X+
0002ff 87ae      	STD  Y+14,R26
000300 87bf      	STD  Y+14+1,R27
                 _0x200009C:
000301 d1e8      	RCALL SUBOPT_0x17
000302 3050      	CPI  R21,0
000303 f009      	BREQ _0x200009D
000304 5051      	SUBI R21,LOW(1)
                 _0x200009D:
000305 5031      	SUBI R19,LOW(1)
000306 cfec      	RJMP _0x2000098
                 _0x200009A:
000307 c041      	RJMP _0x200009E
                 _0x2000097:
                 _0x20000A0:
000308 d237      	RCALL SUBOPT_0x25
000309 d454      	RCALL __DIVD21U
00030a 2f2e      	MOV  R18,R30
00030b 302a      	CPI  R18,10
00030c f030      	BRLO _0x20000A2
00030d ff03      	SBRS R16,3
00030e c002      	RJMP _0x20000A3
00030f 5c29      	SUBI R18,-LOW(55)
000310 c001      	RJMP _0x20000A4
                 _0x20000A3:
000311 5a29      	SUBI R18,-LOW(87)
                 _0x20000A4:
000312 c001      	RJMP _0x20000A5
                 _0x20000A2:
000313 5d20      	SUBI R18,-LOW(48)
                 _0x20000A5:
000314 fd04      	SBRC R16,4
000315 c01d      	RJMP _0x20000A7
000316 3321      	CPI  R18,49
000317 f448      	BRSH _0x20000A9
000318 d230      	RCALL SUBOPT_0x26
                +
000319 30a1     +CPI R26 , LOW ( 0x1 )
00031a e0e0     +LDI R30 , HIGH ( 0x1 )
00031b 07be     +CPC R27 , R30
00031c e0e0     +LDI R30 , BYTE3 ( 0x1 )
00031d 078e     +CPC R24 , R30
00031e e0e0     +LDI R30 , BYTE4 ( 0x1 )
00031f 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000320 f409      	BRNE _0x20000A8
                 _0x20000A9:
000321 c00b      	RJMP _0x20000AB
                 _0x20000A8:
000322 1743      	CP   R20,R19
000323 f440      	BRSH _0x2000116
000324 1753      	CP   R21,R19
000325 f010      	BRLO _0x20000AE
000326 ff00      	SBRS R16,0
000327 c001      	RJMP _0x20000AF
                 _0x20000AE:
000328 c00e      	RJMP _0x20000AD
                 _0x20000AF:
000329 e220      	LDI  R18,LOW(32)
00032a ff07      	SBRS R16,7
00032b c007      	RJMP _0x20000B0
                 _0x2000116:
00032c e320      	LDI  R18,LOW(48)
                 _0x20000AB:
00032d 6100      	ORI  R16,LOW(16)
00032e ff02      	SBRS R16,2
00032f c003      	RJMP _0x20000B1
000330 d1fd      	RCALL SUBOPT_0x24
000331 f009      	BREQ _0x20000B2
000332 5051      	SUBI R21,LOW(1)
                 _0x20000B2:
                 _0x20000B1:
                 _0x20000B0:
                 _0x20000A7:
000333 d1b6      	RCALL SUBOPT_0x17
000334 3050      	CPI  R21,0
000335 f009      	BREQ _0x20000B3
000336 5051      	SUBI R21,LOW(1)
                 _0x20000B3:
                 _0x20000AD:
000337 5031      	SUBI R19,LOW(1)
000338 d207      	RCALL SUBOPT_0x25
000339 d455      	RCALL __MODD21U
00033a d1d6      	RCALL SUBOPT_0x1D
00033b 89ec      	LDD  R30,Y+20
00033c d20c      	RCALL SUBOPT_0x26
00033d 27ff      	CLR  R31
00033e 2766      	CLR  R22
00033f 2777      	CLR  R23
000340 d41d      	RCALL __DIVD21U
000341 d1e7      	RCALL SUBOPT_0x23
                +
000342 89e8     +LDD R30 , Y + 16
000343 89f9     +LDD R31 , Y + 16 + 1
000344 896a     +LDD R22 , Y + 16 + 2
000345 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000346 d488      	RCALL __CPD10
000347 f009      	BREQ _0x20000A1
000348 cfbf      	RJMP _0x20000A0
                 _0x20000A1:
                 _0x200009E:
000349 ff00      	SBRS R16,0
00034a c007      	RJMP _0x20000B4
                 _0x20000B5:
00034b 3050      	CPI  R21,0
00034c f029      	BREQ _0x20000B7
00034d 5051      	SUBI R21,LOW(1)
00034e e2e0      	LDI  R30,LOW(32)
00034f 93ea      	ST   -Y,R30
000350 d1ae      	RCALL SUBOPT_0x1A
000351 cff9      	RJMP _0x20000B5
                 _0x20000B7:
                 _0x20000B4:
                 _0x20000B8:
                 _0x2000054:
                 _0x2000114:
000352 e010      	LDI  R17,LOW(0)
                 _0x2000035:
000353 ce50      	RJMP _0x2000030
                 _0x2000032:
000354 d118      	RCALL SUBOPT_0x2
000355 d449      	RCALL __GETW1P
000356 d483      	RCALL __LOADLOCR6
000357 96ef      	ADIW R28,63
000358 966f      	ADIW R28,31
000359 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00035a 92ff      	PUSH R15
00035b 2ef8      	MOV  R15,R24
00035c 9726      	SBIW R28,6
00035d d479      	RCALL __SAVELOCR2
00035e 01de      	MOVW R26,R28
00035f 9614      	ADIW R26,4
000360 d3cd      	RCALL __ADDW2R15
000361 018d      	MOVW R16,R26
000362 e0e0      	LDI  R30,LOW(0)
000363 83ec      	STD  Y+4,R30
000364 83ed      	STD  Y+4+1,R30
000365 83ee      	STD  Y+6,R30
000366 83ef      	STD  Y+6+1,R30
000367 01de      	MOVW R26,R28
000368 9618      	ADIW R26,8
000369 d3c4      	RCALL __ADDW2R15
00036a d434      	RCALL __GETW1P
00036b d104      	RCALL SUBOPT_0x3
00036c 931a      	ST   -Y,R17
00036d 930a      	ST   -Y,R16
00036e efe1      	LDI  R30,LOW(_put_usart_G100)
00036f e0f0      	LDI  R31,HIGH(_put_usart_G100)
000370 d0ff      	RCALL SUBOPT_0x3
000371 01de      	MOVW R26,R28
000372 9618      	ADIW R26,8
000373 de16      	RCALL __print_G100
000374 d469      	RCALL __LOADLOCR2
000375 9628      	ADIW R28,8
000376 90ff      	POP  R15
000377 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
000378 d0f1      	RCALL SUBOPT_0x1
000379 91e9          ld   r30,y+
00037a 91f9          ld   r31,y+
00037b 91a9          ld   r26,y+
00037c 91b9          ld   r27,y+
00037d 01cd          movw r24,r26
                 strcpyf0:
00037e 9005      	lpm  r0,z+
00037f 920d          st   x+,r0
000380 2000          tst  r0
000381 f7e1          brne strcpyf0
000382 01fc          movw r30,r24
000383 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
000384 d0e5      	RCALL SUBOPT_0x1
000385 91a9          ld   r26,y+
000386 91b9          ld   r27,y+
000387 27ee          clr  r30
000388 27ff          clr  r31
                 strlen0:
000389 916d          ld   r22,x+
00038a 2366          tst  r22
00038b f011          breq strlen1
00038c 9631          adiw r30,1
00038d cffb          rjmp strlen0
                 strlen1:
00038e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00038f d0da      	RCALL SUBOPT_0x1
000390 27aa          clr  r26
000391 27bb          clr  r27
000392 91e9          ld   r30,y+
000393 91f9          ld   r31,y+
                 strlenf0:
000394 9005      	lpm  r0,z+
000395 2000          tst  r0
000396 f011          breq strlenf1
000397 9611          adiw r26,1
000398 cffb          rjmp strlenf0
                 strlenf1:
000399 01fd          movw r30,r26
00039a 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
00039b d421      	RCALL __PUTPARD2
00039c 817b         ldd  r23,y+3
00039d 816a         ldd  r22,y+2
00039e 81f9         ldd  r31,y+1
00039f 81e8         ld   r30,y
0003a0 fb77         bst  r23,7
0003a1 0f77         lsl  r23
0003a2 fd67         sbrc r22,7
0003a3 6071         sbr  r23,1
0003a4 2f97         mov  r25,r23
0003a5 579e         subi r25,0x7e
0003a6 f081         breq __ftrunc0
0003a7 f078         brcs __ftrunc0
0003a8 3198         cpi  r25,24
0003a9 f490         brsh __ftrunc1
0003aa 27aa         clr  r26
0003ab 27bb         clr  r27
0003ac 2788         clr  r24
                 __ftrunc2:
0003ad 9408         sec
0003ae 9587         ror  r24
0003af 95b7         ror  r27
0003b0 95a7         ror  r26
0003b1 959a         dec  r25
0003b2 f7d1         brne __ftrunc2
0003b3 23ea         and  r30,r26
0003b4 23fb         and  r31,r27
0003b5 2368         and  r22,r24
0003b6 c005         rjmp __ftrunc1
                 __ftrunc0:
0003b7 94e8         clt
0003b8 2777         clr  r23
0003b9 27ee         clr  r30
0003ba 27ff         clr  r31
0003bb 2766         clr  r22
                 __ftrunc1:
0003bc 776f         cbr  r22,0x80
0003bd 9576         lsr  r23
0003be f408         brcc __ftrunc3
0003bf 6860         sbr  r22,0x80
                 __ftrunc3:
0003c0 f977         bld  r23,7
0003c1 91a9         ld   r26,y+
0003c2 91b9         ld   r27,y+
0003c3 9189         ld   r24,y+
0003c4 9199         ld   r25,y+
0003c5 17ea         cp   r30,r26
0003c6 07fb         cpc  r31,r27
0003c7 0768         cpc  r22,r24
0003c8 0779         cpc  r23,r25
0003c9 fb97         bst  r25,7
0003ca 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0003cb d3f1      	RCALL __PUTPARD2
0003cc d3e1      	RCALL __GETD2S0
0003cd dfcd      	RCALL _ftrunc
0003ce d3e4      	RCALL __PUTD1S0
0003cf f411          brne __floor1
                 __floor0:
0003d0 d17d      	RCALL SUBOPT_0x27
0003d1 c007      	RJMP _0x20A0003
                 __floor1:
0003d2 f7ee          brtc __floor0
0003d3 d17a      	RCALL SUBOPT_0x27
                +
0003d4 e0a0     +LDI R26 , LOW ( 0x3F800000 )
0003d5 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
0003d6 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
0003d7 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
0003d8 d24b      	RCALL __SUBF12
                 _0x20A0003:
0003d9 9624      	ADIW R28,4
0003da 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0003db d0a2      	RCALL SUBOPT_0x6
0003dc e0e0      	LDI  R30,LOW(0)
0003dd 83ea      	STD  Y+2,R30
0003de e3ef      	LDI  R30,LOW(63)
0003df 83eb      	STD  Y+3,R30
0003e0 d3f6      	RCALL __SAVELOCR2
0003e1 85eb      	LDD  R30,Y+11
0003e2 85fc      	LDD  R31,Y+11+1
0003e3 3fef      	CPI  R30,LOW(0xFFFF)
0003e4 efaf      	LDI  R26,HIGH(0xFFFF)
0003e5 07fa      	CPC  R31,R26
0003e6 f429      	BRNE _0x208000D
0003e7 d168      	RCALL SUBOPT_0x28
                +
0003e8 e4a8     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
0003e9 e0b0     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTW2FN _0x2080000,0
0003ea df8d      	RCALL _strcpyf
0003eb c074      	RJMP _0x20A0002
                 _0x208000D:
0003ec 3fef      	CPI  R30,LOW(0x7FFF)
0003ed e7af      	LDI  R26,HIGH(0x7FFF)
0003ee 07fa      	CPC  R31,R26
0003ef f429      	BRNE _0x208000C
0003f0 d15f      	RCALL SUBOPT_0x28
                +
0003f1 e4a9     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
0003f2 e0b0     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTW2FN _0x2080000,1
0003f3 df84      	RCALL _strcpyf
0003f4 c06b      	RJMP _0x20A0002
                 _0x208000C:
0003f5 85ac      	LDD  R26,Y+12
0003f6 23aa      	TST  R26
0003f7 f432      	BRPL _0x208000F
0003f8 d15a      	RCALL SUBOPT_0x29
0003f9 d18b      	RCALL __ANEGF1
0003fa d15d      	RCALL SUBOPT_0x2A
0003fb d161      	RCALL SUBOPT_0x2B
0003fc e2ed      	LDI  R30,LOW(45)
0003fd 93ec      	ST   X,R30
                 _0x208000F:
0003fe 85a8      	LDD  R26,Y+8
0003ff 30a7      	CPI  R26,LOW(0x7)
000400 f010      	BRLO _0x2080010
000401 e0e6      	LDI  R30,LOW(6)
000402 87e8      	STD  Y+8,R30
                 _0x2080010:
000403 8518      	LDD  R17,Y+8
                 _0x2080011:
000404 d082      	RCALL SUBOPT_0x8
000405 f021      	BREQ _0x2080013
000406 d15c      	RCALL SUBOPT_0x2C
000407 d0c6      	RCALL SUBOPT_0x12
000408 d15f      	RCALL SUBOPT_0x2D
000409 cffa      	RJMP _0x2080011
                 _0x2080013:
00040a d162      	RCALL SUBOPT_0x2E
00040b d21f      	RCALL __ADDF12
00040c d14b      	RCALL SUBOPT_0x2A
00040d e010      	LDI  R17,LOW(0)
                +
00040e e0e0     +LDI R30 , LOW ( 0x3F800000 )
00040f e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000410 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000411 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000412 d155      	RCALL SUBOPT_0x2D
                 _0x2080014:
000413 d159      	RCALL SUBOPT_0x2E
000414 d2f9      	RCALL __CMPF12
000415 f060      	BRLO _0x2080016
000416 d14c      	RCALL SUBOPT_0x2C
000417 d0a0      	RCALL SUBOPT_0xE
000418 d14f      	RCALL SUBOPT_0x2D
000419 5f1f      	SUBI R17,-LOW(1)
00041a 3217      	CPI  R17,39
00041b f028      	BRLO _0x2080017
00041c d133      	RCALL SUBOPT_0x28
                +
00041d e4ad     +LDI R26 , LOW ( 2 * _0x2080000 + ( 5 ) )
00041e e0b0     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 5 ) )
                 	__POINTW2FN _0x2080000,5
00041f df58      	RCALL _strcpyf
000420 c03f      	RJMP _0x20A0002
                 _0x2080017:
000421 cff1      	RJMP _0x2080014
                 _0x2080016:
000422 3010      	CPI  R17,0
000423 f421      	BRNE _0x2080018
000424 d138      	RCALL SUBOPT_0x2B
000425 e3e0      	LDI  R30,LOW(48)
000426 93ec      	ST   X,R30
000427 c019      	RJMP _0x2080019
                 _0x2080018:
                 _0x208001A:
000428 d05e      	RCALL SUBOPT_0x8
000429 f0b9      	BREQ _0x208001C
00042a d138      	RCALL SUBOPT_0x2C
00042b d0a2      	RCALL SUBOPT_0x12
00042c d096      	RCALL SUBOPT_0x10
00042d 01df      	MOVW R26,R30
00042e 01cb      	MOVW R24,R22
00042f df9b      	RCALL _floor
000430 d137      	RCALL SUBOPT_0x2D
000431 d13b      	RCALL SUBOPT_0x2E
000432 d296      	RCALL __DIVF21
000433 d184      	RCALL __CFD1U
000434 2f0e      	MOV  R16,R30
000435 d127      	RCALL SUBOPT_0x2B
000436 d0a4      	RCALL SUBOPT_0x14
000437 e0f0      	LDI  R31,0
000438 d12a      	RCALL SUBOPT_0x2C
000439 d306      	RCALL __CWD1
00043a d1b6      	RCALL __CDF1
00043b d23f      	RCALL __MULF12
00043c d139      	RCALL SUBOPT_0x2F
00043d d384      	RCALL __SWAPD12
00043e d1e5      	RCALL __SUBF12
00043f d118      	RCALL SUBOPT_0x2A
000440 cfe7      	RJMP _0x208001A
                 _0x208001C:
                 _0x2080019:
000441 85e8      	LDD  R30,Y+8
000442 30e0      	CPI  R30,0
000443 f0c1      	BREQ _0x20A0001
000444 d118      	RCALL SUBOPT_0x2B
000445 e2ee      	LDI  R30,LOW(46)
000446 93ec      	ST   X,R30
                 _0x208001E:
000447 85e8      	LDD  R30,Y+8
000448 50e1      	SUBI R30,LOW(1)
000449 87e8      	STD  Y+8,R30
00044a 5fef      	SUBI R30,-LOW(1)
00044b f081      	BREQ _0x2080020
00044c d129      	RCALL SUBOPT_0x2F
00044d d06a      	RCALL SUBOPT_0xE
00044e d109      	RCALL SUBOPT_0x2A
00044f d103      	RCALL SUBOPT_0x29
000450 d167      	RCALL __CFD1U
000451 2f0e      	MOV  R16,R30
000452 d10a      	RCALL SUBOPT_0x2B
000453 d087      	RCALL SUBOPT_0x14
000454 e0f0      	LDI  R31,0
000455 d120      	RCALL SUBOPT_0x2F
000456 d2e9      	RCALL __CWD1
000457 d199      	RCALL __CDF1
000458 d369      	RCALL __SWAPD12
000459 d1ca      	RCALL __SUBF12
00045a d0fd      	RCALL SUBOPT_0x2A
00045b cfeb      	RJMP _0x208001E
                 _0x2080020:
                 _0x20A0001:
00045c 81ae      	LDD  R26,Y+6
00045d 81bf      	LDD  R27,Y+6+1
00045e e0e0      	LDI  R30,LOW(0)
00045f 93ec      	ST   X,R30
                 _0x20A0002:
000460 d37d      	RCALL __LOADLOCR2
000461 962d      	ADIW R28,13
000462 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G104:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x0:
                +
000463 e68b     +LDI R24 , LOW ( 107 )
                +__DELAY_USB_LOOP :
000464 958a     +DEC R24
000465 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 107
000466 9473      	INC  R7
000467 e0e2      	LDI  R30,LOW(2)
000468 15e7      	CP   R30,R7
000469 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
00046a 93ba      	ST   -Y,R27
00046b 93aa      	ST   -Y,R26
00046c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2:
00046d 81ae      	LDD  R26,Y+6
00046e 81bf      	LDD  R27,Y+6+1
00046f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
000470 93fa      	ST   -Y,R31
000471 93ea      	ST   -Y,R30
000472 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
000473 27ff      	CLR  R31
000474 2766      	CLR  R22
000475 2777      	CLR  R23
000476 d341      	RCALL __PUTPARD1
000477 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x5:
000478 91ed      	LD   R30,X+
000479 91fd      	LD   R31,X+
00047a 9631      	ADIW R30,1
00047b 93fe      	ST   -X,R31
00047c 93ee      	ST   -X,R30
00047d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00047e dfeb      	RCALL SUBOPT_0x1
00047f 9724      	SBIW R28,4
000480 e0e0      	LDI  R30,LOW(0)
000481 83e8      	ST   Y,R30
000482 83e9      	STD  Y+1,R30
000483 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
000484 85e8      	LDD  R30,Y+8
000485 85f9      	LDD  R31,Y+8+1
000486 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
000487 2fe1      	MOV  R30,R17
000488 5011      	SUBI R17,1
000489 30e0      	CPI  R30,0
00048a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x9:
                +
00048b 81ac     +LDD R26 , Y + 4
00048c 81bd     +LDD R27 , Y + 4 + 1
00048d 818e     +LDD R24 , Y + 4 + 2
00048e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00048f e0e0     +LDI R30 , LOW ( 0x41200000 )
000490 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000491 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000492 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000493 d1e7      	RCALL __MULF12
                +
000494 83ec     +STD Y + 4 , R30
000495 83fd     +STD Y + 4 + 1 , R31
000496 836e     +STD Y + 4 + 2 , R22
000497 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000498 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
                +
000499 85ec     +LDD R30 , Y + 12
00049a 85fd     +LDD R31 , Y + 12 + 1
00049b 856e     +LDD R22 , Y + 12 + 2
00049c 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00049d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xB:
                +
00049e 81ec     +LDD R30 , Y + 4
00049f 81fd     +LDD R31 , Y + 4 + 1
0004a0 816e     +LDD R22 , Y + 4 + 2
0004a1 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0004a2 85ac     +LDD R26 , Y + 12
0004a3 85bd     +LDD R27 , Y + 12 + 1
0004a4 858e     +LDD R24 , Y + 12 + 2
0004a5 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004a6 d267      	RCALL __CMPF12
0004a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xC:
                +
0004a8 85ac     +LDD R26 , Y + 12
0004a9 85bd     +LDD R27 , Y + 12 + 1
0004aa 858e     +LDD R24 , Y + 12 + 2
0004ab 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0004ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD:
                +
0004ad eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0004ae ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0004af ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0004b0 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0004b1 d1c9      	RCALL __MULF12
                +
0004b2 87ec     +STD Y + 12 , R30
0004b3 87fd     +STD Y + 12 + 1 , R31
0004b4 876e     +STD Y + 12 + 2 , R22
0004b5 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0004b6 5f3f      	SUBI R19,-LOW(1)
0004b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xE:
                +
0004b8 e0e0     +LDI R30 , LOW ( 0x41200000 )
0004b9 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0004ba e260     +LDI R22 , BYTE3 ( 0x41200000 )
0004bb e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0004bc d1be      	RCALL __MULF12
0004bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xF:
                +
0004be 87ec     +STD Y + 12 , R30
0004bf 87fd     +STD Y + 12 + 1 , R31
0004c0 876e     +STD Y + 12 + 2 , R22
0004c1 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0004c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x10:
                +
0004c3 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0004c4 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0004c5 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0004c6 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0004c7 d163      	RCALL __ADDF12
0004c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
                +
0004c9 81ac     +LDD R26 , Y + 4
0004ca 81bd     +LDD R27 , Y + 4 + 1
0004cb 818e     +LDD R24 , Y + 4 + 2
0004cc 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0004cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x12:
                +
0004ce eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0004cf ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0004d0 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0004d1 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0004d2 d1a8      	RCALL __MULF12
0004d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
0004d4 85a8      	LDD  R26,Y+8
0004d5 85b9      	LDD  R27,Y+8+1
0004d6 9611      	ADIW R26,1
0004d7 87a8      	STD  Y+8,R26
0004d8 87b9      	STD  Y+8+1,R27
0004d9 9711      	SBIW R26,1
0004da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x14:
0004db 2fe0      	MOV  R30,R16
0004dc 5de0      	SUBI R30,-LOW(48)
0004dd 93ec      	ST   X,R30
0004de 2fe0      	MOV  R30,R16
0004df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
0004e0 dfa3      	RCALL SUBOPT_0x7
0004e1 9631      	ADIW R30,1
0004e2 87e8      	STD  Y+8,R30
0004e3 87f9      	STD  Y+8+1,R31
0004e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16:
0004e5 9731      	SBIW R30,1
0004e6 01bf      	MOVW R22,R30
0004e7 2fa3      	MOV  R26,R19
0004e8 e0ea      	LDI  R30,LOW(10)
0004e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17:
0004ea 932a      	ST   -Y,R18
0004eb 81af      	LDD  R26,Y+7
0004ec 85b8      	LDD  R27,Y+7+1
0004ed 85e9      	LDD  R30,Y+9
0004ee 85fa      	LDD  R31,Y+9+1
0004ef 9509      	ICALL
0004f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x18:
                +
0004f1 01fe     +MOVW R30 , R28
0004f2 5ae6     +SUBI R30 , LOW ( - 90 )
0004f3 4fff     +SBCI R31 , HIGH ( - 90 )
0004f4 9001     +LD R0 , Z +
0004f5 81f0     +LD R31 , Z
0004f6 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0004f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:28 WORDS
                 SUBOPT_0x19:
0004f8 9734      	SBIW R30,4
                +
0004f9 01de     +MOVW R26 , R28
0004fa 5aa6     +SUBI R26 , LOW ( - 90 )
0004fb 4fbf     +SBCI R27 , HIGH ( - 90 )
0004fc 93ed     +ST X + , R30
0004fd 93fc     +ST X , R31
                 	__PUTW1SX 90
0004fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1A:
0004ff 81af      	LDD  R26,Y+7
000500 85b8      	LDD  R27,Y+7+1
000501 85e9      	LDD  R30,Y+9
000502 85fa      	LDD  R31,Y+9+1
000503 9509      	ICALL
000504 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
000505 01fe      	MOVW R30,R28
000506 9676      	ADIW R30,22
000507 87ee      	STD  Y+14,R30
000508 87ff      	STD  Y+14+1,R31
000509 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x1C:
                +
00050a 01de     +MOVW R26 , R28
00050b 5aa6     +SUBI R26 , LOW ( - 90 )
00050c 4fbf     +SBCI R27 , HIGH ( - 90 )
00050d 900d     +LD R0 , X +
00050e 91bc     +LD R27 , X
00050f 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000510 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D:
                +
000511 87ea     +STD Y + 10 , R30
000512 87fb     +STD Y + 10 + 1 , R31
000513 876c     +STD Y + 10 + 2 , R22
000514 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000515 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
000516 dfda      	RCALL SUBOPT_0x18
000517 cfe0      	RJMP SUBOPT_0x19
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1F:
                +
000518 85ea     +LDD R30 , Y + 10
000519 85fb     +LDD R31 , Y + 10 + 1
00051a 856c     +LDD R22 , Y + 10 + 2
00051b 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00051c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20:
00051d 87ee      	STD  Y+14,R30
00051e 87ff      	STD  Y+14+1,R31
00051f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000520 85ae      	LDD  R26,Y+14
000521 85bf      	LDD  R27,Y+14+1
000522 de61      	RCALL _strlen
000523 2f1e      	MOV  R17,R30
000524 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22:
000525 dfe4      	RCALL SUBOPT_0x1C
000526 9614      	ADIW R26,4
000527 d277      	RCALL __GETW1P
000528 cff4      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x23:
                +
000529 8be8     +STD Y + 16 , R30
00052a 8bf9     +STD Y + 16 + 1 , R31
00052b 8b6a     +STD Y + 16 + 2 , R22
00052c 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00052d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x24:
00052e 7f0b      	ANDI R16,LOW(251)
00052f 89ed      	LDD  R30,Y+21
000530 93ea      	ST   -Y,R30
                +
000531 01de     +MOVW R26 , R28
000532 5aa9     +SUBI R26 , LOW ( - 87 )
000533 4fbf     +SBCI R27 , HIGH ( - 87 )
000534 900d     +LD R0 , X +
000535 91bc     +LD R27 , X
000536 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000537 01fe     +MOVW R30 , R28
000538 5ae7     +SUBI R30 , LOW ( - 89 )
000539 4fff     +SBCI R31 , HIGH ( - 89 )
00053a 9001     +LD R0 , Z +
00053b 81f0     +LD R31 , Z
00053c 2de0     +MOV R30 , R0
                 	__GETW1SX 89
00053d 9509      	ICALL
00053e 3050      	CPI  R21,0
00053f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25:
                +
000540 89e8     +LDD R30 , Y + 16
000541 89f9     +LDD R31 , Y + 16 + 1
000542 896a     +LDD R22 , Y + 16 + 2
000543 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000544 85aa     +LDD R26 , Y + 10
000545 85bb     +LDD R27 , Y + 10 + 1
000546 858c     +LDD R24 , Y + 10 + 2
000547 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000548 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
                +
000549 89a8     +LDD R26 , Y + 16
00054a 89b9     +LDD R27 , Y + 16 + 1
00054b 898a     +LDD R24 , Y + 16 + 2
00054c 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00054d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
00054e d25a      	RCALL __GETD1S0
00054f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x28:
000550 81ee      	LDD  R30,Y+6
000551 81ff      	LDD  R31,Y+6+1
000552 cf1d      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29:
                +
000553 85e9     +LDD R30 , Y + 9
000554 85fa     +LDD R31 , Y + 9 + 1
000555 856b     +LDD R22 , Y + 9 + 2
000556 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000557 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x2A:
                +
000558 87e9     +STD Y + 9 , R30
000559 87fa     +STD Y + 9 + 1 , R31
00055a 876b     +STD Y + 9 + 2 , R22
00055b 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00055c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x2B:
00055d df0f      	RCALL SUBOPT_0x2
00055e 9611      	ADIW R26,1
00055f 83ae      	STD  Y+6,R26
000560 83bf      	STD  Y+6+1,R27
000561 9711      	SBIW R26,1
000562 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2C:
                +
000563 81aa     +LDD R26 , Y + 2
000564 81bb     +LDD R27 , Y + 2 + 1
000565 818c     +LDD R24 , Y + 2 + 2
000566 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000567 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2D:
                +
000568 83ea     +STD Y + 2 , R30
000569 83fb     +STD Y + 2 + 1 , R31
00056a 836c     +STD Y + 2 + 2 , R22
00056b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00056c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2E:
                +
00056d 81ea     +LDD R30 , Y + 2
00056e 81fb     +LDD R31 , Y + 2 + 1
00056f 816c     +LDD R22 , Y + 2 + 2
000570 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000571 85a9     +LDD R26 , Y + 9
000572 85ba     +LDD R27 , Y + 9 + 1
000573 858b     +LDD R24 , Y + 9 + 2
000574 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000575 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2F:
                +
000576 85a9     +LDD R26 , Y + 9
000577 85ba     +LDD R27 , Y + 9 + 1
000578 858b     +LDD R24 , Y + 9 + 2
000579 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00057a 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00057b 9610      	adiw r26,0
00057c f039      	breq __delay_ms1
                 __delay_ms0:
                +
00057d ed80     +LDI R24 , LOW ( 0x7D0 )
00057e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00057f 9701     +SBIW R24 , 1
000580 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000581 95a8      	wdr
000582 9711      	sbiw r26,1
000583 f7c9      	brne __delay_ms0
                 __delay_ms1:
000584 9508      	ret
                 
                 __ANEGF1:
000585 9730      	SBIW R30,0
000586 4060      	SBCI R22,0
000587 4070      	SBCI R23,0
000588 f009      	BREQ __ANEGF10
000589 5870      	SUBI R23,0x80
                 __ANEGF10:
00058a 9508      	RET
                 
                 __ROUND_REPACK:
00058b 2355      	TST  R21
00058c f442      	BRPL __REPACK
00058d 3850      	CPI  R21,0x80
00058e f411      	BRNE __ROUND_REPACK0
00058f ffe0      	SBRS R30,0
000590 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000591 9631      	ADIW R30,1
000592 1f69      	ADC  R22,R25
000593 1f79      	ADC  R23,R25
000594 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000595 e850      	LDI  R21,0x80
000596 2757      	EOR  R21,R23
000597 f411      	BRNE __REPACK0
000598 935f      	PUSH R21
000599 c0cf      	RJMP __ZERORES
                 __REPACK0:
00059a 3f5f      	CPI  R21,0xFF
00059b f031      	BREQ __REPACK1
00059c 0f66      	LSL  R22
00059d 0c00      	LSL  R0
00059e 9557      	ROR  R21
00059f 9567      	ROR  R22
0005a0 2f75      	MOV  R23,R21
0005a1 9508      	RET
                 __REPACK1:
0005a2 935f      	PUSH R21
0005a3 2000      	TST  R0
0005a4 f00a      	BRMI __REPACK2
0005a5 c0cf      	RJMP __MAXRES
                 __REPACK2:
0005a6 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0005a7 e850      	LDI  R21,0x80
0005a8 2e19      	MOV  R1,R25
0005a9 2215      	AND  R1,R21
0005aa 0f88      	LSL  R24
0005ab 1f99      	ROL  R25
0005ac 2795      	EOR  R25,R21
0005ad 0f55      	LSL  R21
0005ae 9587      	ROR  R24
                 
                 __UNPACK1:
0005af e850      	LDI  R21,0x80
0005b0 2e07      	MOV  R0,R23
0005b1 2205      	AND  R0,R21
0005b2 0f66      	LSL  R22
0005b3 1f77      	ROL  R23
0005b4 2775      	EOR  R23,R21
0005b5 0f55      	LSL  R21
0005b6 9567      	ROR  R22
0005b7 9508      	RET
                 
                 __CFD1U:
0005b8 9468      	SET
0005b9 c001      	RJMP __CFD1U0
                 __CFD1:
0005ba 94e8      	CLT
                 __CFD1U0:
0005bb 935f      	PUSH R21
0005bc dff2      	RCALL __UNPACK1
0005bd 3870      	CPI  R23,0x80
0005be f018      	BRLO __CFD10
0005bf 3f7f      	CPI  R23,0xFF
0005c0 f408      	BRCC __CFD10
0005c1 c0a7      	RJMP __ZERORES
                 __CFD10:
0005c2 e156      	LDI  R21,22
0005c3 1b57      	SUB  R21,R23
0005c4 f4aa      	BRPL __CFD11
0005c5 9551      	NEG  R21
0005c6 3058      	CPI  R21,8
0005c7 f40e      	BRTC __CFD19
0005c8 3059      	CPI  R21,9
                 __CFD19:
0005c9 f030      	BRLO __CFD17
0005ca efef      	SER  R30
0005cb efff      	SER  R31
0005cc ef6f      	SER  R22
0005cd e77f      	LDI  R23,0x7F
0005ce f977      	BLD  R23,7
0005cf c01a      	RJMP __CFD15
                 __CFD17:
0005d0 2777      	CLR  R23
0005d1 2355      	TST  R21
0005d2 f0b9      	BREQ __CFD15
                 __CFD18:
0005d3 0fee      	LSL  R30
0005d4 1fff      	ROL  R31
0005d5 1f66      	ROL  R22
0005d6 1f77      	ROL  R23
0005d7 955a      	DEC  R21
0005d8 f7d1      	BRNE __CFD18
0005d9 c010      	RJMP __CFD15
                 __CFD11:
0005da 2777      	CLR  R23
                 __CFD12:
0005db 3058      	CPI  R21,8
0005dc f028      	BRLO __CFD13
0005dd 2fef      	MOV  R30,R31
0005de 2ff6      	MOV  R31,R22
0005df 2f67      	MOV  R22,R23
0005e0 5058      	SUBI R21,8
0005e1 cff9      	RJMP __CFD12
                 __CFD13:
0005e2 2355      	TST  R21
0005e3 f031      	BREQ __CFD15
                 __CFD14:
0005e4 9576      	LSR  R23
0005e5 9567      	ROR  R22
0005e6 95f7      	ROR  R31
0005e7 95e7      	ROR  R30
0005e8 955a      	DEC  R21
0005e9 f7d1      	BRNE __CFD14
                 __CFD15:
0005ea 2000      	TST  R0
0005eb f40a      	BRPL __CFD16
0005ec d145      	RCALL __ANEGD1
                 __CFD16:
0005ed 915f      	POP  R21
0005ee 9508      	RET
                 
                 __CDF1U:
0005ef 9468      	SET
0005f0 c001      	RJMP __CDF1U0
                 __CDF1:
0005f1 94e8      	CLT
                 __CDF1U0:
0005f2 9730      	SBIW R30,0
0005f3 4060      	SBCI R22,0
0005f4 4070      	SBCI R23,0
0005f5 f0b1      	BREQ __CDF10
0005f6 2400      	CLR  R0
0005f7 f026      	BRTS __CDF11
0005f8 2377      	TST  R23
0005f9 f412      	BRPL __CDF11
0005fa 9400      	COM  R0
0005fb d136      	RCALL __ANEGD1
                 __CDF11:
0005fc 2e17      	MOV  R1,R23
0005fd e17e      	LDI  R23,30
0005fe 2011      	TST  R1
                 __CDF12:
0005ff f032      	BRMI __CDF13
000600 957a      	DEC  R23
000601 0fee      	LSL  R30
000602 1fff      	ROL  R31
000603 1f66      	ROL  R22
000604 1c11      	ROL  R1
000605 cff9      	RJMP __CDF12
                 __CDF13:
000606 2fef      	MOV  R30,R31
000607 2ff6      	MOV  R31,R22
000608 2d61      	MOV  R22,R1
000609 935f      	PUSH R21
00060a df8a      	RCALL __REPACK
00060b 915f      	POP  R21
                 __CDF10:
00060c 9508      	RET
                 
                 __SWAPACC:
00060d 934f      	PUSH R20
00060e 01af      	MOVW R20,R30
00060f 01fd      	MOVW R30,R26
000610 01da      	MOVW R26,R20
000611 01ab      	MOVW R20,R22
000612 01bc      	MOVW R22,R24
000613 01ca      	MOVW R24,R20
000614 2d40      	MOV  R20,R0
000615 2c01      	MOV  R0,R1
000616 2e14      	MOV  R1,R20
000617 914f      	POP  R20
000618 9508      	RET
                 
                 __UADD12:
000619 0fea      	ADD  R30,R26
00061a 1ffb      	ADC  R31,R27
00061b 1f68      	ADC  R22,R24
00061c 9508      	RET
                 
                 __NEGMAN1:
00061d 95e0      	COM  R30
00061e 95f0      	COM  R31
00061f 9560      	COM  R22
000620 5fef      	SUBI R30,-1
000621 4fff      	SBCI R31,-1
000622 4f6f      	SBCI R22,-1
000623 9508      	RET
                 
                 __SUBF12:
000624 935f      	PUSH R21
000625 df81      	RCALL __UNPACK
000626 3890      	CPI  R25,0x80
000627 f171      	BREQ __ADDF129
000628 e850      	LDI  R21,0x80
000629 2615      	EOR  R1,R21
                 
00062a c004      	RJMP __ADDF120
                 
                 __ADDF12:
00062b 935f      	PUSH R21
00062c df7a      	RCALL __UNPACK
00062d 3890      	CPI  R25,0x80
00062e f139      	BREQ __ADDF129
                 
                 __ADDF120:
00062f 3870      	CPI  R23,0x80
000630 f121      	BREQ __ADDF128
                 __ADDF121:
000631 2f57      	MOV  R21,R23
000632 1b59      	SUB  R21,R25
000633 f12b      	BRVS __ADDF1211
000634 f412      	BRPL __ADDF122
000635 dfd7      	RCALL __SWAPACC
000636 cffa      	RJMP __ADDF121
                 __ADDF122:
000637 3158      	CPI  R21,24
000638 f018      	BRLO __ADDF123
000639 27aa      	CLR  R26
00063a 27bb      	CLR  R27
00063b 2788      	CLR  R24
                 __ADDF123:
00063c 3058      	CPI  R21,8
00063d f028      	BRLO __ADDF124
00063e 2fab      	MOV  R26,R27
00063f 2fb8      	MOV  R27,R24
000640 2788      	CLR  R24
000641 5058      	SUBI R21,8
000642 cff9      	RJMP __ADDF123
                 __ADDF124:
000643 2355      	TST  R21
000644 f029      	BREQ __ADDF126
                 __ADDF125:
000645 9586      	LSR  R24
000646 95b7      	ROR  R27
000647 95a7      	ROR  R26
000648 955a      	DEC  R21
000649 f7d9      	BRNE __ADDF125
                 __ADDF126:
00064a 2d50      	MOV  R21,R0
00064b 2551      	EOR  R21,R1
00064c f072      	BRMI __ADDF127
00064d dfcb      	RCALL __UADD12
00064e f438      	BRCC __ADDF129
00064f 9567      	ROR  R22
000650 95f7      	ROR  R31
000651 95e7      	ROR  R30
000652 9573      	INC  R23
000653 f413      	BRVC __ADDF129
000654 c020      	RJMP __MAXRES
                 __ADDF128:
000655 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000656 df3e      	RCALL __REPACK
000657 915f      	POP  R21
000658 9508      	RET
                 __ADDF1211:
000659 f7d8      	BRCC __ADDF128
00065a cffb      	RJMP __ADDF129
                 __ADDF127:
00065b 1bea      	SUB  R30,R26
00065c 0bfb      	SBC  R31,R27
00065d 0b68      	SBC  R22,R24
00065e f051      	BREQ __ZERORES
00065f f410      	BRCC __ADDF1210
000660 9400      	COM  R0
000661 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000662 2366      	TST  R22
000663 f392      	BRMI __ADDF129
000664 0fee      	LSL  R30
000665 1fff      	ROL  R31
000666 1f66      	ROL  R22
000667 957a      	DEC  R23
000668 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000669 27ee      	CLR  R30
00066a 27ff      	CLR  R31
00066b 2766      	CLR  R22
00066c 2777      	CLR  R23
00066d 915f      	POP  R21
00066e 9508      	RET
                 
                 __MINRES:
00066f efef      	SER  R30
000670 efff      	SER  R31
000671 e76f      	LDI  R22,0x7F
000672 ef7f      	SER  R23
000673 915f      	POP  R21
000674 9508      	RET
                 
                 __MAXRES:
000675 efef      	SER  R30
000676 efff      	SER  R31
000677 e76f      	LDI  R22,0x7F
000678 e77f      	LDI  R23,0x7F
000679 915f      	POP  R21
00067a 9508      	RET
                 
                 __MULF12:
00067b 935f      	PUSH R21
00067c df2a      	RCALL __UNPACK
00067d 3870      	CPI  R23,0x80
00067e f351      	BREQ __ZERORES
00067f 3890      	CPI  R25,0x80
000680 f341      	BREQ __ZERORES
000681 2401      	EOR  R0,R1
000682 9408      	SEC
000683 1f79      	ADC  R23,R25
000684 f423      	BRVC __MULF124
000685 f31c      	BRLT __ZERORES
                 __MULF125:
000686 2000      	TST  R0
000687 f33a      	BRMI __MINRES
000688 cfec      	RJMP __MAXRES
                 __MULF124:
000689 920f      	PUSH R0
00068a 931f      	PUSH R17
00068b 932f      	PUSH R18
00068c 933f      	PUSH R19
00068d 934f      	PUSH R20
00068e 2711      	CLR  R17
00068f 2722      	CLR  R18
000690 2799      	CLR  R25
000691 9f68      	MUL  R22,R24
000692 01a0      	MOVW R20,R0
000693 9f8f      	MUL  R24,R31
000694 2d30      	MOV  R19,R0
000695 0d41      	ADD  R20,R1
000696 1f59      	ADC  R21,R25
000697 9f6b      	MUL  R22,R27
000698 0d30      	ADD  R19,R0
000699 1d41      	ADC  R20,R1
00069a 1f59      	ADC  R21,R25
00069b 9f8e      	MUL  R24,R30
00069c d027      	RCALL __MULF126
00069d 9fbf      	MUL  R27,R31
00069e d025      	RCALL __MULF126
00069f 9f6a      	MUL  R22,R26
0006a0 d023      	RCALL __MULF126
0006a1 9fbe      	MUL  R27,R30
0006a2 d01d      	RCALL __MULF127
0006a3 9faf      	MUL  R26,R31
0006a4 d01b      	RCALL __MULF127
0006a5 9fae      	MUL  R26,R30
0006a6 0d11      	ADD  R17,R1
0006a7 1f29      	ADC  R18,R25
0006a8 1f39      	ADC  R19,R25
0006a9 1f49      	ADC  R20,R25
0006aa 1f59      	ADC  R21,R25
0006ab 2fe3      	MOV  R30,R19
0006ac 2ff4      	MOV  R31,R20
0006ad 2f65      	MOV  R22,R21
0006ae 2f52      	MOV  R21,R18
0006af 914f      	POP  R20
0006b0 913f      	POP  R19
0006b1 912f      	POP  R18
0006b2 911f      	POP  R17
0006b3 900f      	POP  R0
0006b4 2366      	TST  R22
0006b5 f02a      	BRMI __MULF122
0006b6 0f55      	LSL  R21
0006b7 1fee      	ROL  R30
0006b8 1fff      	ROL  R31
0006b9 1f66      	ROL  R22
0006ba c002      	RJMP __MULF123
                 __MULF122:
0006bb 9573      	INC  R23
0006bc f24b      	BRVS __MULF125
                 __MULF123:
0006bd decd      	RCALL __ROUND_REPACK
0006be 915f      	POP  R21
0006bf 9508      	RET
                 
                 __MULF127:
0006c0 0d10      	ADD  R17,R0
0006c1 1d21      	ADC  R18,R1
0006c2 1f39      	ADC  R19,R25
0006c3 c002      	RJMP __MULF128
                 __MULF126:
0006c4 0d20      	ADD  R18,R0
0006c5 1d31      	ADC  R19,R1
                 __MULF128:
0006c6 1f49      	ADC  R20,R25
0006c7 1f59      	ADC  R21,R25
0006c8 9508      	RET
                 
                 __DIVF21:
0006c9 935f      	PUSH R21
0006ca dedc      	RCALL __UNPACK
0006cb 3870      	CPI  R23,0x80
0006cc f421      	BRNE __DIVF210
0006cd 2011      	TST  R1
                 __DIVF211:
0006ce f40a      	BRPL __DIVF219
0006cf cf9f      	RJMP __MINRES
                 __DIVF219:
0006d0 cfa4      	RJMP __MAXRES
                 __DIVF210:
0006d1 3890      	CPI  R25,0x80
0006d2 f409      	BRNE __DIVF218
                 __DIVF217:
0006d3 cf95      	RJMP __ZERORES
                 __DIVF218:
0006d4 2401      	EOR  R0,R1
0006d5 9408      	SEC
0006d6 0b97      	SBC  R25,R23
0006d7 f41b      	BRVC __DIVF216
0006d8 f3d4      	BRLT __DIVF217
0006d9 2000      	TST  R0
0006da cff3      	RJMP __DIVF211
                 __DIVF216:
0006db 2f79      	MOV  R23,R25
0006dc 931f      	PUSH R17
0006dd 932f      	PUSH R18
0006de 933f      	PUSH R19
0006df 934f      	PUSH R20
0006e0 2411      	CLR  R1
0006e1 2711      	CLR  R17
0006e2 2722      	CLR  R18
0006e3 2733      	CLR  R19
0006e4 2744      	CLR  R20
0006e5 2755      	CLR  R21
0006e6 e290      	LDI  R25,32
                 __DIVF212:
0006e7 17ae      	CP   R26,R30
0006e8 07bf      	CPC  R27,R31
0006e9 0786      	CPC  R24,R22
0006ea 0741      	CPC  R20,R17
0006eb f030      	BRLO __DIVF213
0006ec 1bae      	SUB  R26,R30
0006ed 0bbf      	SBC  R27,R31
0006ee 0b86      	SBC  R24,R22
0006ef 0b41      	SBC  R20,R17
0006f0 9408      	SEC
0006f1 c001      	RJMP __DIVF214
                 __DIVF213:
0006f2 9488      	CLC
                 __DIVF214:
0006f3 1f55      	ROL  R21
0006f4 1f22      	ROL  R18
0006f5 1f33      	ROL  R19
0006f6 1c11      	ROL  R1
0006f7 1faa      	ROL  R26
0006f8 1fbb      	ROL  R27
0006f9 1f88      	ROL  R24
0006fa 1f44      	ROL  R20
0006fb 959a      	DEC  R25
0006fc f751      	BRNE __DIVF212
0006fd 01f9      	MOVW R30,R18
0006fe 2d61      	MOV  R22,R1
0006ff 914f      	POP  R20
000700 913f      	POP  R19
000701 912f      	POP  R18
000702 911f      	POP  R17
000703 2366      	TST  R22
000704 f032      	BRMI __DIVF215
000705 0f55      	LSL  R21
000706 1fee      	ROL  R30
000707 1fff      	ROL  R31
000708 1f66      	ROL  R22
000709 957a      	DEC  R23
00070a f243      	BRVS __DIVF217
                 __DIVF215:
00070b de7f      	RCALL __ROUND_REPACK
00070c 915f      	POP  R21
00070d 9508      	RET
                 
                 __CMPF12:
00070e 2399      	TST  R25
00070f f09a      	BRMI __CMPF120
000710 2377      	TST  R23
000711 f042      	BRMI __CMPF121
000712 1797      	CP   R25,R23
000713 f048      	BRLO __CMPF122
000714 f429      	BRNE __CMPF121
000715 17ae      	CP   R26,R30
000716 07bf      	CPC  R27,R31
000717 0786      	CPC  R24,R22
000718 f020      	BRLO __CMPF122
000719 f031      	BREQ __CMPF123
                 __CMPF121:
00071a 9498      	CLZ
00071b 9488      	CLC
00071c 9508      	RET
                 __CMPF122:
00071d 9498      	CLZ
00071e 9408      	SEC
00071f 9508      	RET
                 __CMPF123:
000720 9418      	SEZ
000721 9488      	CLC
000722 9508      	RET
                 __CMPF120:
000723 2377      	TST  R23
000724 f7c2      	BRPL __CMPF122
000725 1797      	CP   R25,R23
000726 f398      	BRLO __CMPF121
000727 f7a9      	BRNE __CMPF122
000728 17ea      	CP   R30,R26
000729 07fb      	CPC  R31,R27
00072a 0768      	CPC  R22,R24
00072b f388      	BRLO __CMPF122
00072c f399      	BREQ __CMPF123
00072d cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00072e 2400      	CLR  R0
00072f 0daf      	ADD  R26,R15
000730 1db0      	ADC  R27,R0
000731 9508      	RET
                 
                 __ANEGD1:
000732 95f0      	COM  R31
000733 9560      	COM  R22
000734 9570      	COM  R23
000735 95e1      	NEG  R30
000736 4fff      	SBCI R31,-1
000737 4f6f      	SBCI R22,-1
000738 4f7f      	SBCI R23,-1
000739 9508      	RET
                 
                 __CBD1:
00073a 2ffe      	MOV  R31,R30
00073b 0fff      	ADD  R31,R31
00073c 0bff      	SBC  R31,R31
00073d 2f6f      	MOV  R22,R31
00073e 2f7f      	MOV  R23,R31
00073f 9508      	RET
                 
                 __CWD1:
000740 2f6f      	MOV  R22,R31
000741 0f66      	ADD  R22,R22
000742 0b66      	SBC  R22,R22
000743 2f76      	MOV  R23,R22
000744 9508      	RET
                 
                 __EQW12:
000745 17ea      	CP   R30,R26
000746 07fb      	CPC  R31,R27
000747 e0e1      	LDI  R30,1
000748 f009      	BREQ __EQW12T
000749 27ee      	CLR  R30
                 __EQW12T:
00074a 9508      	RET
                 
                 __DIVB21U:
00074b 2400      	CLR  R0
00074c e098      	LDI  R25,8
                 __DIVB21U1:
00074d 0faa      	LSL  R26
00074e 1c00      	ROL  R0
00074f 1a0e      	SUB  R0,R30
000750 f410      	BRCC __DIVB21U2
000751 0e0e      	ADD  R0,R30
000752 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000753 60a1      	SBR  R26,1
                 __DIVB21U3:
000754 959a      	DEC  R25
000755 f7b9      	BRNE __DIVB21U1
000756 2fea      	MOV  R30,R26
000757 2da0      	MOV  R26,R0
000758 9508      	RET
                 
                 __DIVB21:
000759 d039      	RCALL __CHKSIGNB
00075a dff0      	RCALL __DIVB21U
00075b f40e      	BRTC __DIVB211
00075c 95e1      	NEG  R30
                 __DIVB211:
00075d 9508      	RET
                 
                 __DIVD21U:
00075e 933f      	PUSH R19
00075f 934f      	PUSH R20
000760 935f      	PUSH R21
000761 2400      	CLR  R0
000762 2411      	CLR  R1
000763 2744      	CLR  R20
000764 2755      	CLR  R21
000765 e230      	LDI  R19,32
                 __DIVD21U1:
000766 0faa      	LSL  R26
000767 1fbb      	ROL  R27
000768 1f88      	ROL  R24
000769 1f99      	ROL  R25
00076a 1c00      	ROL  R0
00076b 1c11      	ROL  R1
00076c 1f44      	ROL  R20
00076d 1f55      	ROL  R21
00076e 1a0e      	SUB  R0,R30
00076f 0a1f      	SBC  R1,R31
000770 0b46      	SBC  R20,R22
000771 0b57      	SBC  R21,R23
000772 f428      	BRCC __DIVD21U2
000773 0e0e      	ADD  R0,R30
000774 1e1f      	ADC  R1,R31
000775 1f46      	ADC  R20,R22
000776 1f57      	ADC  R21,R23
000777 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000778 60a1      	SBR  R26,1
                 __DIVD21U3:
000779 953a      	DEC  R19
00077a f759      	BRNE __DIVD21U1
00077b 01fd      	MOVW R30,R26
00077c 01bc      	MOVW R22,R24
00077d 01d0      	MOVW R26,R0
00077e 01ca      	MOVW R24,R20
00077f 915f      	POP  R21
000780 914f      	POP  R20
000781 913f      	POP  R19
000782 9508      	RET
                 
                 __MODB21:
000783 94e8      	CLT
000784 ffa7      	SBRS R26,7
000785 c002      	RJMP __MODB211
000786 95a1      	NEG  R26
000787 9468      	SET
                 __MODB211:
000788 fde7      	SBRC R30,7
000789 95e1      	NEG  R30
00078a dfc0      	RCALL __DIVB21U
00078b 2fea      	MOV  R30,R26
00078c f40e      	BRTC __MODB212
00078d 95e1      	NEG  R30
                 __MODB212:
00078e 9508      	RET
                 
                 __MODD21U:
00078f dfce      	RCALL __DIVD21U
000790 01fd      	MOVW R30,R26
000791 01bc      	MOVW R22,R24
000792 9508      	RET
                 
                 __CHKSIGNB:
000793 94e8      	CLT
000794 ffe7      	SBRS R30,7
000795 c002      	RJMP __CHKSB1
000796 95e1      	NEG  R30
000797 9468      	SET
                 __CHKSB1:
000798 ffa7      	SBRS R26,7
000799 c004      	RJMP __CHKSB2
00079a 95a1      	NEG  R26
00079b f800      	BLD  R0,0
00079c 9403      	INC  R0
00079d fa00      	BST  R0,0
                 __CHKSB2:
00079e 9508      	RET
                 
                 __GETW1P:
00079f 91ed      	LD   R30,X+
0007a0 91fc      	LD   R31,X
0007a1 9711      	SBIW R26,1
0007a2 9508      	RET
                 
                 __GETD1P:
0007a3 91ed      	LD   R30,X+
0007a4 91fd      	LD   R31,X+
0007a5 916d      	LD   R22,X+
0007a6 917c      	LD   R23,X
0007a7 9713      	SBIW R26,3
0007a8 9508      	RET
                 
                 __GETD1S0:
0007a9 81e8      	LD   R30,Y
0007aa 81f9      	LDD  R31,Y+1
0007ab 816a      	LDD  R22,Y+2
0007ac 817b      	LDD  R23,Y+3
0007ad 9508      	RET
                 
                 __GETD2S0:
0007ae 81a8      	LD   R26,Y
0007af 81b9      	LDD  R27,Y+1
0007b0 818a      	LDD  R24,Y+2
0007b1 819b      	LDD  R25,Y+3
0007b2 9508      	RET
                 
                 __PUTD1S0:
0007b3 83e8      	ST   Y,R30
0007b4 83f9      	STD  Y+1,R31
0007b5 836a      	STD  Y+2,R22
0007b6 837b      	STD  Y+3,R23
0007b7 9508      	RET
                 
                 __PUTPARD1:
0007b8 937a      	ST   -Y,R23
0007b9 936a      	ST   -Y,R22
0007ba 93fa      	ST   -Y,R31
0007bb 93ea      	ST   -Y,R30
0007bc 9508      	RET
                 
                 __PUTPARD2:
0007bd 939a      	ST   -Y,R25
0007be 938a      	ST   -Y,R24
0007bf 93ba      	ST   -Y,R27
0007c0 93aa      	ST   -Y,R26
0007c1 9508      	RET
                 
                 __SWAPD12:
0007c2 2e18      	MOV  R1,R24
0007c3 2f86      	MOV  R24,R22
0007c4 2d61      	MOV  R22,R1
0007c5 2e19      	MOV  R1,R25
0007c6 2f97      	MOV  R25,R23
0007c7 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0007c8 2e1b      	MOV  R1,R27
0007c9 2fbf      	MOV  R27,R31
0007ca 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0007cb 2e1a      	MOV  R1,R26
0007cc 2fae      	MOV  R26,R30
0007cd 2de1      	MOV  R30,R1
0007ce 9508      	RET
                 
                 __CPD10:
0007cf 9730      	SBIW R30,0
0007d0 4060      	SBCI R22,0
0007d1 4070      	SBCI R23,0
0007d2 9508      	RET
                 
                 __SAVELOCR6:
0007d3 935a      	ST   -Y,R21
                 __SAVELOCR5:
0007d4 934a      	ST   -Y,R20
                 __SAVELOCR4:
0007d5 933a      	ST   -Y,R19
                 __SAVELOCR3:
0007d6 932a      	ST   -Y,R18
                 __SAVELOCR2:
0007d7 931a      	ST   -Y,R17
0007d8 930a      	ST   -Y,R16
0007d9 9508      	RET
                 
                 __LOADLOCR6:
0007da 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0007db 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0007dc 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0007dd 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0007de 8119      	LDD  R17,Y+1
0007df 8108      	LD   R16,Y
0007e0 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  62 r1 :  34 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   0 r7 :   6 
r8 :   4 r9 :   2 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  44 r17:  49 r18:  46 r19:  36 r20:  50 r21:  90 r22: 105 r23:  92 
r24:  66 r25:  57 r26: 162 r27:  80 r28:  31 r29:   1 r30: 330 r31: 128 
x  :  38 y  : 279 z  :  22 
Registers used: 27 out of 35 (77.1%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  24 add   :  16 
adiw  :  31 and   :   5 andi  :   5 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  43 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  25 
brlt  :   2 brmi  :  10 brne  :  56 brpl  :   9 brsh  :  10 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 cbi   :   2 
cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 clr   :  58 
cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 cp    :  18 
cpc   :  19 cpi   :  75 cpse  :   0 dec   :  15 des   :   0 eor   :   7 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 in    :   0 
inc   :   6 ld    :  42 ldd   : 152 ldi   : 173 lds   :   0 lpm   :  12 
lsl   :  16 lsr   :   3 mov   :  81 movw  :  46 mul   :  11 muls  :   0 
mulsu :   0 neg   :   9 nop   :   0 or    :   0 ori   :   9 out   :  10 
pop   :  22 push  :  22 rcall : 271 ret   : 101 reti  :   0 rjmp  : 159 
rol   :  32 ror   :  15 sbc   :  11 sbci  :  19 sbi   :   2 sbic  :   2 
sbis  :   5 sbiw  :  22 sbr   :   4 sbrc  :   4 sbrs  :  20 sec   :   5 
seh   :   0 sei   :   0 sen   :   0 ser   :   8 ses   :   0 set   :   4 
sev   :   0 sez   :   1 sleep :   0 spm   :   0 st    :  55 std   :  79 
sts   :   0 sub   :   6 subi  :  43 swap  :   0 tst   :  23 wdr   :   1 

Instructions used: 74 out of 114 (64.9%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000fc2   3976     58   4034    8192  49.2%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 8 warnings
